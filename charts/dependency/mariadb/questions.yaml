# Include{groups}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
  - variable: mariadbDatabase
    group: "App Configuration"
    label: "Database Name"
    schema:
      type: string
      default: "mydatabase"
      required: true
  - variable: mariadbUsername
    group: "App Configuration"
    label: "Database User"
    schema:
      type: string
      default: "mydatabaseuser"
      required: true
  - variable: mariadbPassword
    group: "App Configuration"
    label: "Database Password"
    schema:
      type: string
      default: ""
      required: true
  - variable: mariadbRootPassword
    group: "App Configuration"
    label: "Root Password"
    schema:
      type: string
      default: ""
      required: true
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 3306
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
      additional_attrs: true
      type: dict
      attrs:
        - variable: data
          label: "DB Storage"
          description: "Stores the old Application Database."
          schema:
            type: dict
            hidden: true
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
