# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
  - variable: env
    group: App Configuration
    label: Image Environment
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: TTRSS_SELF_URL_PATH
          label: TTRSS Self URL Path
          description: You will likely need to set this to the correct value - it should point to external tt-rss URL as seen in your browser. e.g. https://rss.example.com
          schema:
            type: string
            required: true
            default: ""
        - variable: ADMIN_USER_PASS
          label: TTRSS Admin User Password
          description: Leave blank and tt-rss will generate a random password to use with admin account on first run. Check container logs for password.
          schema:
            type: string
            private: true
            default: ""
        - variable: RESOLVER
          label: TTRSS DNS Resolver
          description: Advanced usage. Set to the default DNS server for TrueNAS Scale.
          schema:
            type: string
            default: "172.17.0.10"
        - variable: APP_WEB_ROOT
          label: TTRSS App Web Root Path
          description: Advanced usage. This is the filesystem path for tt-rss. Usually set to "/var/www/html", but the default on this app is "/var/www/html/tt-rss". https://tt-rss.org/wiki/InstallationNotes#how-do-i-make-it-run-without-tt-rss-in-the-url-i.e.-at-website-root
          schema:
            type: string
            default: "/var/www/html/tt-rss"
        - variable: APP_BASE
          label: TTRSS App Base Path
          description: Advanced usage. This is the root URL path for tt-rss. Usually set to "/tt-rss", but the default on this app is "". https://tt-rss.org/wiki/InstallationNotes#how-do-i-make-it-run-without-tt-rss-in-the-url-i.e.-at-website-root
          schema:
            type: string
            default: ""
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10104
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: html
          label: App HTML Storage
          description: Stores the Application PHP, theme, and plugin files.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: config
          label: App Config Storage
          description: Stores the Application Configuration.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# # Include{persistenceBasic}
#         - variable: plugins
#           label: App Plugins Storage
#           description: Stores the Application Plugins.
#           schema:
#             additional_attrs: true
#             type: dict
#             attrs:
# # Include{persistenceBasic}
#         - variable: themes
#           label: App Themes Storage
#           description: Stores the Application Themes.
#           schema:
#             additional_attrs: true
#             type: dict
#             attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{postgresql}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
