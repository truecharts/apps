# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}

# Include{containerBasic}
# Include{containerAdvanced}

  - variable: magicmirror
    group: App Configuration
    label: Magic Mirror 2 Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: force_update
          label: Force Update
          description: Check for updates on every restart for MagicMirrorÂ²
          schema:
            type: boolean
            default: false
        - variable: force_update_modules
          label: Force Update Modules
          description: Check for updates on every restart for the modules
          schema:
            type: boolean
            default: false
        - variable: lang
          label: Language
          description: The language of the interface. (Not all elements will be localized.)
          schema:
            type: string
            default: "en"
        - variable: locale
          label: Locale
          description: The locale of the interface.
          schema:
            type: string
            default: "en-US"
        - variable: time_format
          label: Time Format
          description: The form of time notation that will be used.
          schema:
            type: string
            default: "24"
            enum:
              - value: "24"
                description: "24 Hours"
              - value: "12"
                description: "12 Hours"
        - variable: units
          label: Units
          description: The units that will be used in the default weather modules.
          schema:
            type: string
            default: "metric"
            enum:
              - value: "metric"
                description: "Metric"
              - value: "imperial"
                description: "Imperial"

# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
# Include{serviceMain}
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10590
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: modules
          label: "App Modules Storage"
          description: "Stores the Application Modules."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: css
          label: "App CSS Storage"
          description: "Stores the Application CSS."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID this App of the user running the application"
                schema:
                  type: int
                  default: 568
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
