image:
  repository: wisemapping/wisemapping
  pullPolicy: IfNotPresent
  tag: latest@sha256:4242fce8570c3f288c664c3615e5efe197249fed9def881c35528bcc0287699e

securityContext:
  container:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0

service:
  main:
    ports:
      main:
        port: 8080
        targetPort: 8080

workload:
  main:
    podSpec:
      initContainers:
        init-config:
          enabled: true
          type: init
          imageSelector: "image"
          env:
            ADMIN_EMAIL: "change@test1.com"
          command:
            - /bin/sh
            - -c
          args:
            - >
              if [ -f usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties ] || [ ${USE_CUSTOM_CONFIG_FILE} == true ]; then
                echo "Initial configuration exists or User selected to use custom configuration file. Skipping...";
              else
                echo "Creating initial configuration";
                touch /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "# Configuration bellow will be always be overridden" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "# from environment settings defined in the Chart or Questions." >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "# You however will not see this values change in the file." >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "# It's a generated file based on the values provided on initial install." >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "##########################################################" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "# Database Configuration" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "##########################################################" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "database.url=jdbc:{{ .Values.cnpg.main.creds.host | trimAll "\"" }}/wisemapping" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "database.driver=org.postgresql.Driver" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "database.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "database.username= {{ .Values.cnpg.main.user }}" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "database.password= {{ .Values.cnpg.main.creds.password | trimAll "\"" }}" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "database.validation.enabled=true" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "database.validation.query=" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "database.validation.enabled=false" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "##########################################################" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "# Users Registration Configuration" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "##########################################################" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "admin.user = {{ .Values.workload.main.podSpec.containers.main.env.ADMIN_EMAIL }}" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "#site.baseurl = http://localhost:8080" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "# Site Homepage URL. This will be used as URL for homepage location." >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "site.homepage = c/login" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "# Font end static content can be deployed externally to the web app. Uncomment here and specify the url base location." >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
                echo "site.static.js.url = /static" >> /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties;
              fi
      containers:
        main:
          env:
            ADMIN_EMAIL: "change@test.com"
            USE_CUSTOM_CONFIG_FILE: false

persistence:
  config:
    enabled: true
    subPath: app.properties
    targetSelector:
      main:
        main:
          mountPath: /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties
          subPath: app.properties
        init-config:
          mountPath: /usr/local/tomcat/webapps/ROOT/WEB-INF/app.properties
          subPath: app.properties

cnpg:
  main:
    enabled: true
    user: wisemapping
    database: wisemapping

portal:
  open:
    enabled: true
