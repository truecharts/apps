# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}

# Include{containerBasic}
# Include{containerAdvanced}

  - variable: nitter
    group: App Configuration
    label: Nitter Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: general
          label: General
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: title
                label: Website Title
                schema:
                  type: string
                  required: true
                  default: Nitter
              - variable: hostname
                label: Hostname
                schema:
                  type: string
                  required: true
                  default: localhost:10606
              - variable: httpMaxConnections
                label: HTTP Max Connections
                schema:
                  type: int
                  required: true
                  default: 100
        - variable: cache
          label: Cache
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: listMinutes
                label: List Minutes
                description: How long to cache list info (not the tweets, so keep it high).
                schema:
                  type: int
                  required: true
                  default: 240
              - variable: rssMinutes
                label: RSS Minutes
                description: How long to cache rss queries.
                schema:
                  type: int
                  required: true
                  default: 10
        - variable: config
          label: Configuration
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: base64Media
                label: Base64 Encoding
                description: Enable base64 encoding for proxied media urls.
                schema:
                  type: boolean
                  default: false
              - variable: enableRSS
                label: Enable RSS
                description: Uncheck to disable RSS feeds.
                schema:
                  type: boolean
                  default: true
              - variable: enableDebug
                label: Enable Debug
                description: Enable request logs and debug endpoints.
                schema:
                  type: boolean
                  default: false
              - variable: proxy
                label: Proxy
                description: http/https url, SOCKS proxies are not supported.
                schema:
                  type: string
                  default: ""
              - variable: proxyAuth
                label: Proxy Auth
                schema:
                  type: string
                  default: ""
              - variable: tokenCount
                label: Token Count
                description: Minimum amount of usable tokens that are used to authorize API requests.
                schema:
                  type: int
                  required: true
                  default: 10
        - variable: preferences
          label: Preferences
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: theme
                label: Theme
                schema:
                  type: string
                  required: true
                  default: nitter
                  enum:
                    - value: auto
                      description: Auto
                    - value: auto_(twitter)
                      description: Auto (Twitter)
                    - value: black
                      description: Black
                    - value: dracula
                      description: Dracula
                    - value: mastodon
                      description: Mastodon
                    - value: nitter
                      description: Nitter
                    - value: pleroma
                      description: Pleroma
                    - value: twitter
                      description: Twitter
                    - value: twitter_dark
                      description: Twitter Dark
              - variable: replaceTwitter
                label: Replace Twitter
                schema:
                  type: string
                  default: nitter.net
              - variable: replaceYouTube
                label: Replace YouTube
                schema:
                  type: string
                  default: piped.video
              - variable: replaceReddit
                label: Replace Reddit
                schema:
                  type: string
                  default: teddit.net
              - variable: replaceInstagram
                label: Replace Instagram
                schema:
                  type: string
                  default: ""
              - variable: proxyVideos
                label: Proxy Videos
                schema:
                  type: boolean
                  default: true
              - variable: hlsPlayback
                label: HLS PlayBack
                schema:
                  type: boolean
                  default: false
              - variable: infiniteScroll
                label: infinite Scroll
                schema:
                  type: boolean
                  default: false

# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10606
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 568
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
