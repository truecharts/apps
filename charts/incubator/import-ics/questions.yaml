# Include{groups}
portals: {}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}

                                - variable: env
                                  label: Image Environment
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: ICS_USERNAME
                                        label: "ICS_USERNAME"
                                        description: "Username for connecting to CalDAV server"
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: ICS_PASSWORD
                                        label: "ICS_PASSWORD"
                                        description: "Password for connecting to CalDAV server"
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: ICS_URL
                                        label: "ICS_URL"
                                        description: "URL to access the CalDAV Servereg. httpexample.comdav.php"
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: CRONTAB_SCHEDULE
                                        label: "CRONTAB_SCHEDULE"
                                        description: "Crontab schedule string for when script is desired to run."
                                        schema:
                                          type: string
                                          default: "0 0 * * *"
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "config Storage"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: icsexportfolder
          label: "icsexportfolder Storage"
          description: "Folder into which you can place ics files to be imported.  And which downloaded ics files will be placed into.  If unmapped, downloads will still work."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
