image:
  repository: tccr.io/truecharts/alpine
  pullPolicy: IfNotPresent
  tag: latest@sha256:17cd77e25d3fa829d168caec4db7bb5b52ceeb935d8ca0d1180de6f615553dc4

service:
  main:
    enabled: false
    ports:
      main:
        enabled: false

workload:
  main:
    enabled: false

portal:
  open:
    enabled: false

operator:
  register: true

velero:
  namespace:
    labels:
      # Enforce Pod Security Standards with Namespace Labels
      # https://kubernetes.io/docs/tasks/configure-pod-container/enforce-standards-namespace-labels/
      - key: pod-security.kubernetes.io/enforce
        value: privileged
      - key: pod-security.kubernetes.io/enforce-version
        value: latest
      - key: pod-security.kubernetes.io/audit
        value: privileged
      - key: pod-security.kubernetes.io/audit-version
        value: latest
      - key: pod-security.kubernetes.io/warn
        value: privileged
      - key: pod-security.kubernetes.io/warn-version
        value: latest

  # Resource requests/limits to specify for the Velero deployment.
  # https://velero.io/docs/v1.6/customize-installation/#customize-resource-requests-and-limits
  resources:
    limits:
      cpu: 4000m
      memory: 4Gi

  # Init containers to add to the Velero deployment's pod spec. At least one plugin provider image is required.
  # If the value is a string then it is evaluated as a template.
  initContainers:
    - name: opeebs-velero-plugin
      image: openebs/velero-plugin:1.9.0@sha256:f89855c12dd0a9bfd1afb9a75b051f6cb0452c4c073df9fc7fff4d7983eff341
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins
    - name: velero-plugin-for-csi
      image: velero/velero-plugin-for-csi:v0.6.0@sha256:fc07d1897a65d7728543b2fae9feddad087b5e7f45f45c3adaeda2ef4996fd50
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins
    - name: velero-plugin-for-aws
      image: velero/velero-plugin-for-aws:v1.8.0@sha256:466d4ee963de87b28e38098f5f91401bde514c7c2449ea6da4009be626a08f6c
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins

  # Whether to deploy the node-agent daemonset.
  deployNodeAgent: true

  nodeAgent:
    podVolumePath: /var/lib/kubelet/pods
    privileged: true
    # Resource requests/limits to specify for the node-agent daemonset deployment. Optional.
    # https://velero.io/docs/v1.6/customize-installation/#customize-resource-requests-and-limits
    resources:
      limits:
        cpu: 2000m
        memory: 2048Mi

  ##
  ## Parameters for the `default` BackupStorageLocation and VolumeSnapshotLocation,
  ## and additional server settings.
  ##
  configuration:
    ## Please do not use, use .Values.backupStorageLocation instead
    backupStorageLocation: []

    ## Please do not use, use .Values.volumeSnapshotLocation instead
    volumeSnapshotLocation: []

  ## Please do not use, use .Values.schedules instead
  schedules: {}

manifestManager:
  enabled: false

# # Parameters for the BackupStorageLocation(s). Configure multiple by adding other element(s) to the backupStorageLocation slice.
# # See https://velero.io/docs/v1.6/api-types/backupstoragelocation/
backupStorageLocationList: []
# - name: name
#     # name is the name of the backup storage location where backups should be stored. If a name is not provided,
#     # a backup storage location will be created with the name "default". Optional.
backupStorageLocation: {}
# backupStorageLocation:
#   name:
#     # provider is the name for the backup storage location provider.
#     provider:
#     objectStorage:
#       # bucket is the name of the bucket to store backups in. Required.
#       bucket:
#       # caCert defines a base64 encoded CA bundle to use when verifying TLS connections to the provider. Optional.
#       caCert:
#       # prefix is the directory under which all Velero data should be stored within the bucket. Optional.
#       prefix:
#     # validationFrequency defines how frequently Velero should validate the object storage. Optional.
#     validationFrequency:
#     # accessMode determines if velero can write to this backup storage location. Optional.
#     # default to ReadWrite, ReadOnly is used during migrations and restores.
#     accessMode: ReadWrite
#     credential:
#       # AWS/s3 credentials to be put into secret (mandatory if provider == aws/s3)
#       aws:
#         id: fdgsdfghsdfgh
#         key: dfgdfhsdfgh
#       # name of the secret used by this backupStorageLocation.
#       name:
#       # name of key that contains the secret data to be used.
#       key:
#     # Additional provider-specific configuration. See link above
#     # for details of required/optional fields for your provider.
#     config: {}
#     #  region:
#     #  s3ForcePathStyle:
#     #  s3Url:
#     #  kmsKeyId:
#     #  resourceGroup:
#     #  The ID of the subscription containing the storage account, if different from the cluster’s subscription. (Azure only)
#     #  subscriptionId:
#     #  storageAccount:
#     #  publicUrl:
#     #  Name of the GCP service account to use for this backup storage location. Specify the
#     #  service account here if you want to use workload identity instead of providing the key file.(GCP only)
#     #  serviceAccount:
#     #  Option to skip certificate validation or not if insecureSkipTLSVerify is set to be true, the client side should set the
#     #  flag. For Velero client Command like velero backup describe, velero backup logs needs to add the flag --insecure-skip-tls-verify
#     #  insecureSkipTLSVerify:

# # Parameters for the VolumeSnapshotLocation(s). Configure multiple by adding other element(s) to the volumeSnapshotLocation slice.
# # See https://velero.io/docs/v1.6/api-types/volumesnapshotlocation/
volumeSnapshotLocationList: []
#   # name is the |name of the volume snapshot location where snapshots are being taken. Required.
#   - name: name
#   ...
volumeSnapshotLocation: {}
# volumeSnapshotLocation:
#   name:
#     enabled: false
#     # provider is the name for the volume snapshot provider.
#     provider:
#     credential:
#       # AWS/s3 credentials to be put into secret (mandatory if provider == aws/s3)
#       aws:
#         id: fdgsdfghsdfgh
#         key: dfgdfhsdfgh
#       # name of the secret used by this volumeSnapshotLocation.  (Optional/Advanced)
#       name:
#       # name of key that contains the secret data to be used.  (Optional/Advanced)
#       key:
#     # Additional provider-specific configuration. See link above
#     # for details of required/optional fields for your provider.
#     config: {}
#   #    region:
#   #    apiTimeout:
#   #    resourceGroup:
#   #    The ID of the subscription where volume snapshots should be stored, if different from the cluster’s subscription. If specified, also requires `configuration.volumeSnapshotLocation.config.resourceGroup`to be set. (Azure only)
#   #    subscriptionId:
#   #    incremental:
#   #    snapshotLocation:
#   #    project:

# Backup schedules to create.
schedulesList: []
schedules: {}
# Eg:
# schedules:
#   mybackup:
#     disabled: false
#     labels:
#       myenv: foo
#     annotations:
#       myenv: foo
#     schedule: "0 0 * * *"
#     useOwnerReferencesInBackup: false
#     template:
#       ttl: "240h"
#       storageLocation: default
#       includedNamespaces:
#       - foo
