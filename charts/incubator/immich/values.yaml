image:
  repository: altran1502/immich-server
  tag: v1.98.2@sha256:5d46c02f171b2c85c5c445ed9ae233d68568b241e14e293b0195d539b98de42a
  pullPolicy: IfNotPresent

mlImage:
  repository: altran1502/immich-machine-learning
  pullPolicy: IfNotPresent
  tag: v1.98.2@sha256:ac21ed6160c106eb26f704626d1fbf693dd74640131afd4d2ccad5db26aa98c5

mlCudaImage:
  repository: altran1502/immich-machine-learning
  pullPolicy: IfNotPresent
  tag: v1.98.2-cuda@sha256:77a66de548fe925733045d7ce5f732f5d40093eaa2fea12744bc790e83a14432

mlOpenvinoImage:
  repository: altran1502/immich-machine-learning
  pullPolicy: IfNotPresent
  tag: v1.98.2-openvino@sha256:0f876e81ddfe38c46532cd8aadaba148a653d4543b49024c12c22af24a7d9e2c

securityContext:
  container:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0

immich:
  enable_ml: true
  mlImageType: mlImage
  public_login_page_message: Immich
  log_level: log

service:
  main:
    # Main service targets the server
    targetSelector: main
    ports:
      main:
        port: 10323
        protocol: http
        targetSelector: main
  microservices:
    enabled: true
    type: ClusterIP
    targetSelector: microservices
    ports:
      microservices:
        enabled: true
        primary: true
        port: 10004
        protocol: http
        targetSelector: microservices
  machinelearning:
    enabled: true
    type: ClusterIP
    targetSelector: machinelearning
    ports:
      machinelearning:
        enabled: true
        primary: true
        port: 10003
        protocol: http
        targetSelector: machinelearning

persistence:
  mlcache:
    enabled: true
    type: emptyDir
    targetSelector:
      machinelearning:
        machinelearning:
          mountPath: /mlcache
  microcache:
    enabled: true
    type: emptyDir
    targetSelector:
      microservices:
        microservices:
          mountPath: /microcache
  library:
    enabled: true
    mountPath: /usr/src/app/upload/library
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  uploads:
    enabled: true
    mountPath: /usr/src/app/upload/upload
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  thumbs:
    enabled: true
    mountPath: /usr/src/app/upload/thumbs
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  profile:
    enabled: true
    mountPath: /usr/src/app/upload/profile
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  video:
    enabled: true
    mountPath: /usr/src/app/upload/encoded-video
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}

cnpg:
  main:
    enabled: true
    user: immich
    database: immich
    type: vectors
    cluster:
      initdb:
        postInitApplicationSQL:
          - CREATE EXTENSION IF NOT EXISTS cube;
          - CREATE EXTENSION IF NOT EXISTS earthdistance;
          - CREATE SCHEMA IF NOT EXISTS vectors;
          - ALTER DATABASE immich SET search_path TO "immich", public, vectors;
          - SET search_path TO "immich", public, vectors;
          - GRANT SELECT ON TABLE pg_vector_index_stat TO PUBLIC;
          - ALTER SCHEMA vectors OWNER TO immich;

redis:
  enabled: true
  redisUsername: default

portal:
  open:
    enabled: true
