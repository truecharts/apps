# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}

  - variable: jenkins
    group: App Configuration
    label: Jenkins Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: jenkins_java_opts
          label: Jenkins Java Opts
          description: Add the Jenkins Java Opts parameters, one per entry.
          schema:
            type: list
            default: []
            items:
              - variable: jenkins_java_opts_entry
                label: Jenkins Java Opts Entry
                description: Single Jenkins Java Opt per entry.
                schema:
                  type: string
                  default: ""
                  required: true
        - variable: jenkins_opts
          label: Jenkins Opts
          description: Add the Jenkins Opts parameters, one per entry.
          schema:
            type: list
            default: []
            items:
              - variable: jenkins_opts_entry
                label: Jenkins Opts Entry
                description: Single Jenkins Opt per entry.
                schema:
                  type: string
                  default: ""
                  required: true
        - variable: java_opts
          label: Java Opts
          description: Add the JVM parameters, one per entry.
          schema:
            type: list
            default: []
            items:
              - variable: java_opts_entry
                label: Java Opts Entry
                description: Single Java Opt per entry.
                schema:
                  type: string
                  default: ""
                  required: true
        - variable: plugins_force_upgrade
          label: Plugins Force Upgrade
          description: Set to true to force upgrades of plugins that have been manually upgraded.
          schema:
            type: boolean
            default: false
        - variable: upgrade_if_no_marker
          label: Upgrade If No Marker
          description: Set to true to upgrade existing plugins without marker.
          schema:
            type: boolean
            default: false
# Include{containerConfig}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10280
                              required: true
        - variable: agent
          label: Agent Service
          description: Agent Service
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: agent
                      label: Agent Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 50000
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: data
          label: App Data Storage
          description: Stores the Application Data.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 1000
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 1000
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
        - variable: fsGroup
          label: fsGroup
          description: The group that should own ALL storage.
          schema:
            type: int
            default: 1000
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
