# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}

                                - variable: imageSelector
                                  label: Select Image
                                  schema:
                                    type: string
                                    default: image
                                    enum:
                                      - value: image
                                        description: Base Image
                                      - value: braveImage
                                        description: Brave Image
                                      - value: chromeImage
                                        description: Chrome Image
                                      - value: chromiumImage
                                        description: Chromium Image
                                      - value: edgeImage
                                        description: Edge Image
                                      - value: firefoxImage
                                        description: Firefox Image
                                      - value: operaiImage
                                        description: Opera Image
                                      - value: remminaImage
                                        description: Remmina Image
                                      - value: torImage
                                        description: Tor Image
                                      - value: vivaldiImage
                                        description: Vivaldi Image
                                      - value: vlcImage
                                        description: VLC Image
                                      - value: xfceImage
                                        description: XFCE Image

# Include{containerBasic}
# Include{containerAdvanced}

  - variable: neko
    group: App Configuration
    label: Neko
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: password
          label: "Neko Password"
          schema:
            type: string
            default: ""
            private: true
        - variable: password_admin
          label: "Neko Password Admin"
          schema:
            type: string
            default: ""
            private: true
        - variable: screen
          label: "Neko Screen"
          description: "Resolution after startup. Only Admins can change this later."
          schema:
            type: string
            default: "1920x1080@30"
        - variable: control_protection
          label: "Neko Control Protection"
          description: "Control protection means, users can gain control only if at least one admin is in the room."
          schema:
            type: boolean
            default: false
        - variable: implicit_control
          label: "Neko Implicit Control"
          description: "If enabled members can gain control implicitly, they don't need to request control."
          schema:
            type: boolean
            default: false
        - variable: proxy
          label: "Neko Proxy"
          description: "Enable reverse proxy mode, so that neko trusts X-Forwarded-For headers."
          schema:
            type: boolean
            default: false
        - variable: locks
          label: "Neko Locks"
          description: "Resources, that will be locked when starting."
          schema:
            type: list
            default: []
            items:
              - variable: resources
                label: Resources
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: nat1t01
          label: "Neko Nat1T01"
          description: "IP of the server that will be sent to client, if not specified, public IP is automatically resolved."
          schema:
            type: string
            default: ""
        - variable: ipfetch
          label: "Neko IPFetch"
          description: "Automatically fetch IP address from given URL when NEKO_NAT1TO1 is not specified."
          schema:
            type: string
            default: "http://checkip.amazonaws.com"
        - variable: codecs
          label: Codecs Configuration
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: video
                label: "Video Codec"
                schema:
                  type: string
                  default: "vp8"
                  enum:
                    - value: vp8
                      description: VP8
                    - value: vp9
                      description: VP9
                    - value: h264
                      description: H264
              - variable: audio
                label: "Audio Codec"
                schema:
                  type: string
                  default: "opus"
                  enum:
                    - value: opus
                      description: Opus
                    - value: g722
                      description: G722
                    - value: pcmu
                      description: PCMU
                    - value: pcma
                      description: PCMA
        - variable: bitrate
          label: "Bitrate"
          description: Bitrate of the video stream in kb/s."
          schema:
            type: int
            default: 3500
        - variable: cors
          label: "Cors"
          description: "Cross origin request sharing, list of allowed hosts."
          schema:
            type: list
            default:
              - "*"
            items:
              - variable: cors
                label: Cors
                schema:
                  type: string
                  required: true
                  default: ""

# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the Minecraft Server runs on
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10294
                              required: true
        - variable: webrtc
          label: WebRTC Service
          description: The WebRTC service.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: eprudp
                      label: EPR-UDP Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 52100
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
