# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
  - variable: config
    group: "App Configuration"
    label: "Configuration"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: mapsettings
          label: "Map Settings"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: drawPath
                label: "drawPath"
                schema:
                  type: boolean
                  default: true
              - variable: drawCharger
                label: "drawCharger"
                schema:
                  type: boolean
                  default: true
              - variable: drawRobot
                label: "drawRobot"
                schema:
                  type: boolean
                  default: true
              - variable: scale
                label: "scale"
                schema:
                  type: int
                  default: 2
        - variable: mqtt
          label: "MQTT Settings"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: identifier
                label: "identifier"
                schema:
                  type: string
                  default: "rockrobo"
              - variable: topicPrefix
                label: "topicPrefix"
                schema:
                  type: string
                  default: "valetudo"
              - variable: autoconfPrefix
                label: "autoconfPrefix"
                schema:
                  type: string
                  default: "homeassistant"
              - variable: broker_url
                label: "broker_url"
                schema:
                  type: string
                  default: "mqtt://user:pass@example.com:port"
              - variable: mapDataTopic
                label: "mapDataTopic"
                schema:
                  type: string
                  default: "valetudo/rockrobo/map_data"
              - variable: minMillisecondsBetweenMapUpdates
                label: "minMillisecondsBetweenMapUpdates"
                schema:
                  type: int
                  default: 10000
              - variable: publishMapImage
                label: "publishMapImage"
                schema:
                  type: boolean
                  default: true
        - variable: webserver
          label: "Webserver Settings"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: enabled
                label: "enabled"
                schema:
                  type: boolean
                  default: true
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10039
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 568
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
