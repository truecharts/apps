# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
  - variable: euterpe
    group: App Configuration
    label: Discord GSM Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: basic_authenticate
          label: Enable Basic Authenticate
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: authentication
                label: Authentication
                schema:
                  additional_attrs: true
                  type: dict
                  attrs:
                    - variable: user
                      label: Basic Auth Username
                      schema:
                        type: string
                        required: true
                        default: ""
                    - variable: password
                      label: Basic Auth Password
                      schema:
                        type: string
                        required: true
                        default: ""
        - variable: libraries
          label: Libraries
          description: The `/root/Music` library is automatically added.
          schema:
            type: list
            default: []
            items:
              - variable: libraryEntry
                label: Library Entry
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: library_scan
          label: Library Scan
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: initial_wait_duration
                label: Initial Wait Duration
                schema:
                  type: string
                  default: 1s
              - variable: files_per_operation
                label: Files Per Operation
                schema:
                  type: int
                  default: 1500
              - variable: sleep_after_operation
                label: Sleep After Operation
                schema:
                  type: string
                  default: 15ms
        - variable: discogs
          label: Discogs Settings
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: discogs_auth_token
                label: Discogs Auth Token
                schema:
                  type: string
                  default: ""
              - variable: download_artwork
                label: Download Artwork
                schema:
                  type: boolean
                  default: false
        - variable: show_danger_zone
          label: Show Danger Zone Settings
          schema:
            type: boolean
            default: false
            show_subquestions_if: true
            subquestions:
              - variable: danger_zone
                label: Danger Zone Settings
                schema:
                  additional_attrs: true
                  type: dict
                  attrs:
                    - variable: gzip
                      label: gzip
                      schema:
                        type: boolean
                        default: true
                    - variable: read_timeout
                      label: Read Timeout
                      schema:
                        type: int
                        default: 15
                    - variable: write_timeout
                      label: Write Timeout
                      schema:
                        type: int
                        default: 1200
                    - variable: max_header_bytes
                      label: Max Header Bytes
                      schema:
                        type: int
                        default: 1048576
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 9996
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: music
          label: App Music Storage
          description: Stores the Application Music.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
