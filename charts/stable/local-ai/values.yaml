image:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.2.0@sha256:f87e5c760a4a4d0d0cbf2b4999591b543937fd895cf7a00cb3cccc923ea3676b
ffmpegImage:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.2.0-ffmpeg@sha256:f1a624383c66bc45531f4429faa0dc737b713444c1dbb44d15f70e6d884b2c4a
cublasCuda12Image:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.2.0-cublas-cuda12@sha256:dd4b1e8d1d665c9672c35ca72da0de0305c3a0ee4dd5b2a4a0cb192216240f8c
cublasCuda12FfmpegImage:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.2.0-cublas-cuda12-ffmpeg@sha256:715098f264e5f9130efc74db72326173b7cac58ceb372514c8084bdc02e079c1
cublasCuda11Image:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.2.0-cublas-cuda11@sha256:7c84ecf3e5c2ba07009b00bb6e0ff0cd2e392f5c635af7753e16c99b45a55fb1
cublasCuda11FfmpegImage:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.2.0-cublas-cuda11-ffmpeg@sha256:5d80034e465cb1113380c9bde582d53d5c1d75725a7ef376cb2fd1c03fce84d3
securityContext:
  container:
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0
service:
  main:
    ports:
      main:
        protocol: http
        port: 8080
localai:
  # Specify a build type. Available: cublas, openblas, clblas.
  build_type: "openblas"
  debug: false
  cors: true
  cors_allow_origins: "*"
  galleries: []
  #  - name: model-gallery
  #    url: github:go-skynet/model-gallery/index.yaml
  preload_models: []
  #    url: github:go-skynet/model-gallery/gpt4all-j.yaml
  # UPLOAD_LIMIT
workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              enabled: true
              type: http
              path: /readyz
            readiness:
              enabled: true
              type: http
              path: /readyz
            startup:
              enabled: true
              type: tcp
          imageSelector: image
          env:
            ADDRESS: ":{{ .Values.service.main.ports.main.port }}"
            MODELS_PATH: "{{ .Values.persistence.models.mountPath }}"
            IMAGE_PATH: "{{ .Values.persistence.images.mountPath }}"
            BUILD_TYPE: "{{ .Values.localai.build_type }}"
            # breaks chart if true, keep it false.
            REBUILD: false
            DEBUG: "{{ .Values.localai.debug }}"
            CORS: "{{ .Values.localai.cors }}"
            GALLERIES: "{{ toJson .Values.localai.galleries }}"
            PRELOAD_MODELS: "{{ toJson .Values.localai.preload_models }}"
            CORS_ALLOW_ORIGINS: "{{ .Values.localai.cors_allow_origins }}"
persistence:
  models:
    enabled: true
    mountPath: "/models"
  images:
    enabled: true
    mountPath: "/images"
portal:
  open:
    enabled: false
updated: true
