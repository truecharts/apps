image:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.3.1@sha256:8d4ae57f6c68c778480d0cb0a6596b1513b19a0444d30e4675745c2b403a35d6
ffmpegImage:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.3.0-ffmpeg@sha256:534966e0ae9ee3d1f10dec712e4b96ecf6c38e7ca83665accc64dcedd435a889
cublasCuda12Image:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.3.0-cublas-cuda12@sha256:967d4dac1e9fdddbcd4f502e4a288bf266388f48b0ac34ec27879479fdb52f8d
cublasCuda12FfmpegImage:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.3.0-cublas-cuda12-ffmpeg@sha256:d03ef64d27fd02c2311bf80a3b200c9b4fac6c0148e816cb4b3de6369478c0b6
cublasCuda11Image:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.3.0-cublas-cuda11@sha256:1451fa8be7b12bcd51da87e18cbfeda1536efcb5bfbdaf22da0f157a44054edb
cublasCuda11FfmpegImage:
  repository: quay.io/go-skynet/local-ai
  pullPolicy: IfNotPresent
  tag: v2.3.0-cublas-cuda11-ffmpeg@sha256:c9460b646e38eea6789796a48eb2bb6fa1c808cd999ff7bc43e794865fdc7d35
securityContext:
  container:
    runAsNonRoot: false
    readOnlyRootFilesystem: false
    runAsUser: 0
    runAsGroup: 0
service:
  main:
    ports:
      main:
        protocol: http
        port: 8080
localai:
  # Specify a build type. Available: cublas, openblas, clblas.
  build_type: "openblas"
  debug: false
  cors: true
  cors_allow_origins: "*"
  galleries: []
  #  - name: model-gallery
  #    url: github:go-skynet/model-gallery/index.yaml
  preload_models: []
  #    url: github:go-skynet/model-gallery/gpt4all-j.yaml
  # UPLOAD_LIMIT
workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              enabled: true
              type: http
              path: /readyz
            readiness:
              enabled: true
              type: http
              path: /readyz
            startup:
              enabled: true
              type: tcp
          imageSelector: image
          env:
            ADDRESS: ":{{ .Values.service.main.ports.main.port }}"
            MODELS_PATH: "{{ .Values.persistence.models.mountPath }}"
            IMAGE_PATH: "{{ .Values.persistence.images.mountPath }}"
            BUILD_TYPE: "{{ .Values.localai.build_type }}"
            # breaks chart if true, keep it false.
            REBUILD: false
            DEBUG: "{{ .Values.localai.debug }}"
            CORS: "{{ .Values.localai.cors }}"
            GALLERIES: "{{ toJson .Values.localai.galleries }}"
            PRELOAD_MODELS: "{{ toJson .Values.localai.preload_models }}"
            CORS_ALLOW_ORIGINS: "{{ .Values.localai.cors_allow_origins }}"
persistence:
  models:
    enabled: true
    mountPath: "/models"
  images:
    enabled: true
    mountPath: "/images"
portal:
  open:
    enabled: false
updated: true
