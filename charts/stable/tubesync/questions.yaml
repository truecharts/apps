# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
                                - variable: env
                                  label: Image Environment
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: TUBESYNC_WORKERS
                                        label: "TUBESYNC_WORKERS"
                                        description: "If you add a significant amount of work due to adding many large channels you may need to increase the number of background workers. Try around ~4 at most, although the absolute maximum allowed is 8. Default is 2."
                                        schema:
                                          type: string
                                          default: "2"
                                      - variable: HTTP_USER
                                        label: "HTTP_USER"
                                        description: "Sets the username for HTTP basic authentication. Default is none."
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: HTTP_PASS
                                        label: "HTTP_PASS"
                                        description: "Sets the password for HTTP basic authentication. Default is none."
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: DATABASE_CONNECTION
                                        label: "DATABASE_CONNECTION"
                                        description: "Optional external database connection details. Ex mysqluserpass@hostportdatabase. Default is none."
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: TUBESYNC_HOSTS
                                        label: "TUBESYNC_HOSTS"
                                        description: "Djangos ALLOWEDHOSTS. Ex tubesync.example.com,otherhost.com. Default is none."
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: TUBESYNC_DEBUG
                                        label: "TUBESYNC_DEBUG"
                                        description: "Enable debugging. Default is False. "
                                        schema:
                                          type: string
                                          default: "False"
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 4848
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "config Storage"
          description: "Config storage path. Default is mntuserappdatatubesync."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: downloads
          label: "downloads Storage"
          description: "Path to store downloaded content. Default is none."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
