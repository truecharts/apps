# Include{groups}
portals: {}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
  - variable: gamevault
    group: App Configuration
    label: Gamevault
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: server
          label: Server
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: admin_username
                label: Admin User
                schema:
                  type: string
                  required: true
                  default: ""
              - variable: admin_password
                label: Admin Password
                schema:
                  type: string
                  private: true
                  required: true
                  default: ""
              - variable: registration_disabled
                label: Registration Disabled
                description: If registration is enabled or not.
                schema:
                  type: boolean
                  default: false
              - variable: account_activation_disabled
                label: Account Activation Disabled
                description: If accounts need to be activated by an admin before using them.
                schema:
                  type: boolean
                  default: false
              - variable: allowed_origins
                label: Allowed Origins
                description: List of Allowed CORS origins for the server.
                schema:
                  type: list
                  empty: false
                  required: true
                  default:
                    - "*"
                  items:
                    - variable: origin
                      label: Origin
                      schema:
                        type: string
                        required: true
                        default: ""
              - variable: log_level
                label: Log Level
                description: The log level of the server.
                schema:
                  type: string
                  required: true
                  default: "info"
                  enum:
                    - value: "debug"
                      description: "Debug"
                    - value: "info"
                      description: "Info"
                    - value: "warn"
                      description: "Warn"
                    - value: "error"
                      description: "Error"
                    - value: "fatal"
                      description: "Fatal"
        - variable: games
          label: Games
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: index_interval_in_minutes
                label: Index Interval In Minutes
                description: Determines how often the server should index the list of games.
                schema:
                  type: int
                  default: 5
              - variable: search_recursive
                label: Search Recursive
                description: Toggling the Indexer's search for games in sub folders.
                schema:
                  type: boolean
                  default: true
              - variable: file_formats
                label: Supported File Formats
                description: Custom list of file formats.
                schema:
                  type: list
                  empty: false
                  required: true
                  default:
                    - ".7z"
                    - ".xz"
                    - ".bz2"
                    - ".gz"
                    - ".tar"
                    - ".zip"
                    - ".wim"
                    - ".ar"
                    - ".arj"
                    - ".cab"
                    - ".chm"
                    - ".cpio"
                    - ".cramfs"
                    - ".dmg"
                    - ".ext"
                    - ".fat"
                    - ".gpt"
                    - ".hfs"
                    - ".ihex"
                    - ".iso"
                    - ".lzh"
                    - ".lzma"
                    - ".mbr"
                    - ".msi"
                    - ".nsis"
                    - ".ntfs"
                    - ".qcow2"
                    - ".rar"
                    - ".rpm"
                    - ".squashfs"
                    - ".udf"
                    - ".uefi"
                    - ".vdi"
                    - ".vhd"
                    - ".vmdk"
                    - ".wim"
                    - ".xar"
                    - ".z"
                  items:
                    - variable: format
                      label: Format
                      schema:
                        type: string
                        required: true
                        default: ""
        - variable: images
          label: Images
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: gc_keep_days
                label: GC Keep Days
                description: The number of days to keep unused images. After this period, images that have not been accessed are deleted.
                schema:
                  type: int
                  default: 30
                  min: 1
              - variable: gc_interval_minutes
                label: GC Interval Minutes
                description: How often to run the image garbage collector, in minutes.
                schema:
                  type: int
                  default: 60
                  min: 1
        - variable: rawg
          label: Rawg
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: api_url
                label: API Url
                schema:
                  type: string
                  default: "https://api.rawg.io/api"
              - variable: api_cache_days
                label: API Cache Days
                schema:
                  type: int
                  default: 7
                  min: 1
              - variable: api_key
                label: API Key
                schema:
                  type: string
                  default: ""
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 8080
                              required: true
# Include{externalInterfaces}

# Include{serviceList}
# Include{persistenceRoot}
        - variable: logs
          label: "App Logs Storage"
          description: "Stores the Application Logs."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: images
          label: "App Images Storage"
          description: "Stores the Application Images."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: games
          label: "App Games Storage"
          description: "Stores the Application Games."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{postgresql}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
