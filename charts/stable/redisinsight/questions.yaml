# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
  - variable: redisinsight
    group: App Configuration
    label: Redis Insight Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: trusted_origins
          label: Trusted Origins
          description: Configures the trusted origins of the application. ex https://app.mydomain.tld
          schema:
            type: list
            default: []
            items:
              - variable: origin
                label: Trusted Origin
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: log_level
          label: Log Level
          description: Configures the log level of the application.
          schema:
            type: string
            required: true
            default: WARNING
            enum:
              - value: DEBUG
                description: DEBUG
              - value: INFO
                description: INFO
              - value: WARNING
                description: WARNING
              - value: ERROR
                description: ERROR
              - value: CRITICAL
                description: CRITICAL
        - variable: auth_prompt
          label: Auth Prompt
          description: Enables authentication prompt that asks for authentication before opening an instance or when the user is idle.
          schema:
            type: boolean
            default: false
        - variable: auth_timer
          label: Auth Timer
          description: Idle timer value for authentication prompt, in minutes..
          schema:
            type: int
            default: 30
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10579
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: App Config Storage
          description: Stores the Application Configuration.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: logs
          label: App Logs Storage
          description: Stores the Application Logs.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: runAsUser
                description: The UserID of the user running the application
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: runAsGroup
                description: The groupID this App of the user running the application
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: fsGroup
                description: The group that should own ALL storage.
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
