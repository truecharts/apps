# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
  - variable: kopia
    group: App Configuration
    label: Kopia Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: user
          label: Repo User
          schema:
            type: string
            required: true
            default: kopia
        - variable: password
          label: Repo Password
          schema:
            type: string
            private: true
            required: true
            default: ""
        - variable: server_username
          label: Server User
          schema:
            type: string
            required: true
            default: ""
        - variable: server_password
          label: Server Password
          schema:
            type: string
            private: true
            required: true
            default: ""
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10238
                              required: true
                          - variable: protocol
                            label: "Protocol"
                            description: "Which protocol to host the service with"
                            schema:
                              type: string
                              default: http
                              required: true
                              enum:
                                - value: http
                                  description: "HTTP (insecure)"
                                - value: https
                                  description: "HTTPS (TLS)"
                          - variable: certs
                            label: "TLS Certificate Configuration"
                            schema:
                              show_if: [["protocol", "=", "https"]]
                              additional_attrs: true
                              type: dict
                              attrs:
                                - variable: generate
                                  label: "Generate TLS Certificates"
                                  description: "Create certificates on server start (disable after the first run)"
                                  schema:
                                    type: boolean
                                    default: false
                                - variable: certPath
                                  label: "Certificate Path"
                                  description: "Container path to TLS certificate"
                                  schema:
                                    type: string
                                    default: /app/config/kopia.cert
                                - variable: keyPath
                                  label: "Certificate Key Path"
                                  description: "Container path to TLS certificate key"
                                  schema:
                                    type: string
                                    default: /app/config/kopia.key
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: cache
          label: "App Cache Storage"
          description: "Stores the Application Cache."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: logs
          label: "App Logs Storage"
          description: "Stores the Application Logs."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: rclone
          label: "App Rclone Storage"
          description: "Stores the Application Rclone."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 568
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
