# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}


# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
  - variable: admin
    group: "App Configuration"
    label: "Admin Credentials"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: username
          label: "username"
          schema:
            type: string
            valid_chars: '^(?!^admin$).*$'
            required: true
        - variable: password
          label: "password"
          schema:
            type: string
            required: true
            private: true
        - variable: email
          label: "email"
          schema:
            type: string
            required: true
  - variable: config
    group: "App Configuration"
    label: "Admin Configuration"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: APP_NAME
          label: "APP_NAME"
          schema:
            type: string
            default: "Gitea"
            required: true
        - variable: RUN_MODE
          label: "RUN_MODE"
          schema:
            type: string
            default: "prod"
            enum:
              - value: "prod"
                description: "Production"
              - value: "dev"
                description: "Development"
              - value: "test"
                description: "Testing"
        - variable: ALLOWED_HOST_LIST
          label: "ALLOWED_HOST_LIST"
          schema:
            type: string
            default: "127.0.0.1"
            required: true
        - variable: nodeIP
          label: Node IP
          description: Used to generate configuration, when installed without ingress
          schema:
            type: string
            required: true
            $ref:
              - "definitions/nodeIP"
  - variable: customConfig
    group: "App Configuration"
    label: "Custom Configuration parameters"
    schema:
      type: list
      default: []
      items:
        # Do not fix this typo, it will break
        # current installations
        - variable: catagoryItem
          label: "Category"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: name
                label: "Config Category Name"
                schema:
                  type: string
                  required: true
              - variable: keys
                label: "Configuration Parameters"
                schema:
                  type: list
                  default: []
                  items:
                    - variable: configItem
                      label: "parameter"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: name
                            label: "Parameter Name"
                            schema:
                              type: string
                              required: true
                          - variable: value
                            label: "Parameter Value"
                            schema:
                              type: string
                              required: true
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10037
                              required: true
        - variable: ssh
          label: "SSH Service"
          description: "The SSH service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: ssh
                      label: "SSH Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 2222
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: data
          label: "App data Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 1000
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 1000
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 1000

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
