image:
  repository: tccr.io/truecharts/readarr
  pullPolicy: IfNotPresent
  tag: v0.3.7.2260@sha256:6b0963a303fea8315e220d3ed1e3035c65d3f781b5d0eb1dbd73d6bcef25b82b
exportarrImage:
  repository: tccr.io/truecharts/exportarr
  pullPolicy: IfNotPresent
  tag: v1.5.5@sha256:0dbba4994ac9926e284b5a24fe38e7ca546bcda4b20bbd1ab2444b8bc190d6cb

securityContext:
  container:
    readOnlyRootFilesystem: false

service:
  main:
    ports:
      main:
        port: 8787
  metrics:
    enabled: true
    type: ClusterIP
    targetSelector: exportarr
    ports:
      metrics:
        enabled: true
        port: 8788
        targetSelector: exportarr

workload:
  main:
    podSpec:
      containers:
        main:
          probes:
            liveness:
              enabled: true
              type: http
              path: /ping
            readiness:
              enabled: true
              type: http
              path: /ping
            startup:
              enabled: true
              type: http
              path: /ping
          env:
            READARR__PORT: "{{ .Values.service.main.ports.main.port }}"
            READARR__AUTHENTICATION_METHOD: "None"
  exportarr:
    enabled: true
    type: Deployment
    strategy: RollingUpdate
    replicas: 1
    podSpec:
      containers:
        exportarr:
          primary: true
          enabled: true
          imageSelector: exportarrImage
          args:
            - readarr
          probes:
            liveness:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
            readiness:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
            startup:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
          env:
            INTERFACE: 0.0.0.0
            PORT: "{{ .Values.service.metrics.ports.metrics.port }}"
            URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
            # additional metrics (slow)
            # ENABLE_ADDITIONAL_METRICS: false
            # enable gathering unknown queue items
            # ENABLE_UNKNOWN_QUEUE_ITEMS: false
            CONFIG: "/config/config.xml"

persistence:
  config:
    enabled: true
    targetSelector:
      main:
        main:
          mountPath: /config
      exportarr:
        exportarr:
          mountPath: /config
          readOnly: true

metrics:
  main:
    enabled: true
    type: "servicemonitor"
    endpoints:
      - port: metrics
        path: /metrics
    prometheusRule:
      enabled: false

portal:
  open:
    enabled: true
