# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
  - variable: notifiarr
    group: App Configuration
    label: Image Environment
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: apikey
          label: Notifiarr All API Key
          description: Notifiarr All Integrations API key from https://notifiarr.com
          schema:
            type: string
            default: ""
            required: true
        - variable: upstreams
          label: Upstreams
          description: Controls which IP is written to the web server log file (requestor or x-forwarded-for header). Also allows the x-webauth-user header for proxy authentication. Separate with spaces. The default kubernetes network is pre-filled.
          schema:
            type: list
            default:
              - 172.16.0.0/16
            items:
              - variable: upstreamEntry
                label: Upstream
                description: Upstream IP or CIDR
                schema:
                  type: string
                  default: ""
                  required: true
        - variable: credentials
          label: Web UI Credentials
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: username
                label: Web UI Username
                description: Default username is admin. Change it here.
                schema:
                  type: string
                  default: ""
                  required: true
              - variable: password
                label: Web UI Password
                description: Set a first time login password (minimum 9 characters) & change the password from the Web UI to encrypt it. If you don't set this you will need to check the logs on first start to find the generated password.
                schema:
                  type: string
                  default: ""
                  required: true
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
# Include{serviceMain}
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 5454
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: App Config Storage
          description: Stores the Application Configuration.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: runAsUser
                description: The UserID of the user running the application
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: runAsGroup
                description: The groupID this App of the user running the application
                schema:
                  type: int
                  default: 568
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: fsGroup
                description: The group that should own ALL storage.
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
