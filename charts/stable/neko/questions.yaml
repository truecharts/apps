# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{credentials}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}

                                - variable: imageSelector
                                  label: Select Image
                                  schema:
                                    type: string
                                    default: image
                                    enum:
                                      - value: "image"
                                        description: "Firefox"
                                      - value: "braveImage"
                                        description: "Brave"
                                      - value: "chromeImage"
                                        description: "Chrome"
                                      - value: "chromiumImage"
                                        description: "Chromium"
                                      - value: "edgeImage"
                                        description: "Edge"
                                      - value: "remminaImage"
                                        description: "Remmina"
                                      - value: "torImage"
                                        description: "Tor"
                                      - value: "vivaldiImage"
                                        description: "Vivaldi"
                                      - value: "vlcImage"
                                        description: "Vlc"
                                      - value: "xfceImage"
                                        description: "Xfce"

# Include{containerBasic}
# Include{containerAdvanced}
  - variable: neko
    group: App Configuration
    label: Neko
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: ip
          label: IP
          description: IP of the server that will be sent to client, if not specified, public IP is automatically resolved.
          schema:
            type: string
            default: "0.0.0.0"
        - variable: auth
          label: Auth Credentials
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: user_pass
                label: User Password
                description: Password for the user login.
                schema:
                  type: string
                  private: true
                  default: ""
              - variable: admin_pass
                label: Admin Password
                description: Password for the admin login.
                schema:
                  type: string
                  private: true
                  default: ""
        - variable: proxy
          label: Enable Proxy Mode
          description: Enable reverse proxy mode, so that neko trusts X-Forwarded-For headers.
          schema:
            type: boolean
            default: false
        - variable: screen
          label: Screen
          description: Resolution after startup. Only Admins can change this later.
          schema:
            type: string
            default: "1920x1080@30"
        - variable: control_protection
          label: Control Protection
          description: Control protection means, users can gain control only if at least one admin is in the room.
          schema:
            type: boolean
            default: false
        - variable: implicit_control
          label: Implicit Protection
          description: If enabled members can gain control implicitly, they don't need to request control.
          schema:
            type: boolean
            default: false
        - variable: locks
          label: Locks
          description: Resources, that will be locked when starting.
          schema:
            type: list
            empty: true
            default: []
            required: true
            items:
              - variable: lock
                label: Lock Resource
                schema:
                  type: string
                  required: true
                  default: ""
        - variable: cors
          label: Cors
          description: Cross origin request sharing list of allowed hosts.
          schema:
            type: list
            empty: true
            default:
              - "*"
            required: true
            items:
              - variable: cors
                label: Cors Resource
                schema:
                  type: string
                  required: true
                  default: ""

# Include{containerConfig}
# Include{serviceRoot}
# Include{serviceMain}
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10294
                              required: true
        - variable: mux
          label: "Mux service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: tcp
                      label: "TCP Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 52100
                              required: true

# Include{externalInterfaces}

# Include{serviceList}
# Include{persistenceRoot}
        - variable: downloads
          label: App Downloads Storage
          description: Stores the Application Downloads.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
