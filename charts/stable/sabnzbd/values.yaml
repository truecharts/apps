image:
  repository: ghcr.io/onedr0p/sabnzbd
  pullPolicy: IfNotPresent
  tag: 4.1.0@sha256:91f3cd6b9f1c9988af5447f464b299630706eb7f691dee857eab1487d4bb626e
exportarrImage:
  repository: tccr.io/truecharts/exportarr
  pullPolicy: IfNotPresent
  tag: v1.6.0@sha256:ee118701a2ebe8ccb5c25e1003fbed9ef7ce217d4e4b8b6df30cc2a0def818f8


service:
  main:
    ports:
      main:
        port: 10097
        targetPort: 8080
  metrics:
    enabled: true
    type: ClusterIP
    targetSelector: exportarr
    ports:
      metrics:
        enabled: true
        port: 7879
        targetSelector: exportarr

persistence:
  config:
    enabled: true
    targetSelector:
      main:
        main:
          mountPath: /config
      exportarr:
        exportarr:
          mountPath: /config
          readOnly: true

portal:
  open:
    enabled: true

metrics:
  main:
    enabled: true
    type: "servicemonitor"
    endpoints:
      - port: metrics
        path: /metrics
    targetSelector: metrics

workload:
  main:
    podSpec:
      containers:
        main:
          env:
            SABNZBD__HOST_WHITELIST_ENTRIES: ""
  exportarr:
    enabled: true
    type: Deployment
    strategy: RollingUpdate
    replicas: 1
    podSpec:
      containers:
        exportarr:
          primary: true
          enabled: true
          imageSelector: exportarrImage
          args:
            - sabnzbd
          probes:
            liveness:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
            readiness:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
            startup:
              enabled: true
              type: http
              path: /healthz
              port: "{{ .Values.service.metrics.ports.metrics.port }}"
          env:
            INTERFACE: 0.0.0.0
            PORT: "{{ .Values.service.metrics.ports.metrics.port }}"
            URL: '{{ printf "http://%v:%v" (include "tc.v1.common.lib.chart.names.fullname" $) .Values.service.main.ports.main.port }}'
            CONFIG: "/config/config.xml"
