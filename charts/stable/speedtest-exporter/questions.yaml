# Include{groups}
portals: {}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 568
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{metrics}
# Include{prometheusRule}
                    - variable: downloadLimit
                      label: "Download Limit"
                      description: "Download speed you want alerts to be triggered in Mbps"
                      schema:
                        type: int
                        default: 400
                    - variable: uploadLimit
                      label: "Upload Limit"
                      description: "Upload speed you want alerts to be triggered in Mbps"
                      schema:
                        type: int
                        default: 400
                    - variable: pingLimit
                      label: "Ping Limit"
                      description: "Ping latency you want alerts to be triggered in ms"
                      schema:
                        type: int
                        default: 10
                    - variable: jitterLimit
                      label: "Jitter Limit"
                      description: "Jitter latency you want alerts to be triggered in ms"
                      schema:
                        type: int
                        default: 30
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
