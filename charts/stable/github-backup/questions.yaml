# Include{groups}
portals: {}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
                                - variable: env
                                  label: Image Environment
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: TOKEN
                                        label: "TOKEN"
                                        description: "Get your token from httpsgithub.comsettingstokens, see the support page for more details."
                                        schema:
                                          type: string
                                          default: "1a2b3c4d5e6f71a2b3c4d5e6f71a2b3c4d5e6f7b"
                                      - variable: SCHEDULE
                                        label: "SCHEDULE"
                                        description: "How often to sync in seconds (eg. 3600 for 1h, 21600 for 6h, 43200 for 12h, 86400 for 24h)"
                                        schema:
                                          type: string
                                          default: "3600"
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}

# Include{serviceList}
# Include{persistenceRoot}
        - variable: backuplocation
          label: "backuplocation Storage"
          description: "Set the location of your github backups. Please note that the default will create a backup share if it does not exist and you dont change it."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: config
          label: "config Storage"
          description: "Persistent storage for config.json"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
