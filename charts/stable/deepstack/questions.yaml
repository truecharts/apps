# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
  # Portal
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
                                - variable: imageSelector
                                  label: "Select Image"
                                  schema:
                                    type: string
                                    default: "image"
                                    enum:
                                      - value: "image"
                                        description: "CPU"
                                      - value: "gpuImage"
                                        description: "GPU"
                                - variable: env
                                  label: "Image Environment"
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: API-KEY
                                        label: "API Key"
                                        description: "The API Key protects all recognition and detection endpoints including face, scene, object detection and custom models"
                                        schema:
                                          type: string
                                          private: true
                                          default: ""
                                      - variable: ADMIN-KEY
                                        label: "Admin key"
                                        description: "The admin key protects admin apis such as adding models, deleting models, list models, backup and restore."
                                        schema:
                                          type: string
                                          default: ""
                                          private: true
                                      - variable: MODE
                                        label: "Mode"
                                        description: "Sets the performance mode"
                                        schema:
                                          type: string
                                          default: "Medium"
                                          enum:
                                            - value: "High"
                                              description: "High"
                                            - value: "Medium"
                                              description: "Medium"
                                            - value: "Low"
                                              description: "Low"
                                      - variable: THREADCOUNT
                                        label: "Threadcount"
                                        description: "Sets the threadcount each endpoint will run with"
                                        schema:
                                          type: int
                                          default: 5
# Include{containerBasic}
# Include{containerAdvanced}
  - variable: deepstack
    group: "App Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: vision_face
          label: "VISION-FACE"
          description: "Enables Face Detection"
          schema:
            type: boolean
            default: false
        - variable: vision_detection
          label: "VISION-DETECTION"
          description: "Enables Object Detection"
          schema:
            type: boolean
            default: true
            enum:
        - variable: vision_scene
          label: "VISION-SCENE"
          description: "Enables Scene Detection"
          schema:
            type: boolean
            default: false
        - variable: vision_enhance
          label: "VISION-ENHANCE"
          description: "Enables Enhance Endpoint"
          schema:
            type: boolean
            default: false
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
# Include{serviceMain}
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10049
                              required: true
# Include{externalInterfaces}

# Include{serviceList}
# Include{persistenceRoot}
        - variable: data
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: modelstore
          label: "App Model Storage"
          description: "Stores the Application Model."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID this App of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
