# Include{groups}
portals: {}
questions:
# Include{global}
# Include{credentials}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
                                - variable: env
                                  group: "App Configuration"
                                  label: "Image Secrets"
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: ZEROTIER_API_SECRET
                                        label: "ZEROTIER_API_SECRET"
                                        description: "Replaces the authtoken.secret before booting and allows you to manage the control socket's authentication key"
                                        schema:
                                          type: string
                                          default: ""
                                          private: true
                                      - variable: ZEROTIER_IDENTITY_PUBLIC
                                        label: "ZEROTIER_IDENTITY_PUBLIC"
                                        description: "The identity.public file for zerotier-one. Use zerotier-idtool to generate one of these for you."
                                        schema:
                                          type: string
                                          default: ""
                                          private: true
                                      - variable: ZEROTIER_IDENTITY_SECRET
                                        label: "ZEROTIER_IDENTITY_SECRET"
                                        description: "The identity.secret file for zerotier-one. Use zerotier-idtool to generate one of these for you."
                                        schema:
                                          type: string
                                          default: ""
                                          private: true
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10190
                              required: true
# Include{externalInterfaces}

# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Config."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
