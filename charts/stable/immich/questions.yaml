# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}

  - variable: immich
    group: App Configuration
    label: Immich Configuration
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: public_login_page_message
          label: Public Login Page Message
          description: Custom message on the login page, should be written in HTML form.
          schema:
            type: string
            default: ""
        - variable: log_level
          label: Log Level
          schema:
            type: string
            default: log
            enum:
              - value: log
                description: log
              - value: simple
                description: simple (Switch to log ASAP)
              - value: warn
                description: warn
              - value: error
                description: error
              - value: verbose
                description: verbose
              - value: debug
                description: debug

        - variable: enable_ml
          label: Enable Machine Learning Container
          schema:
            type: boolean
            default: true
        - variable: enable_typesense
          label: Enable Typesense Container
          schema:
            type: boolean
            default: true

# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: Main Service
          description: The Primary service on which the healthcheck runs, often the webUI
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: Main Service Port Configuration
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: Port
                            description: This port exposes the container port on the service
                            schema:
                              type: int
                              default: 10323
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: library
          label: App Library Storage
          description: Stores the Application Uploads.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: uploads
          label: App Uploads Storage
          description: Temporary location for WebUI and mobile app uploads for images/videos that still need to be processed and eventually imported into the library storage.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: thumbs
          label: App Thumbnails Storage
          description: Stores the Application Thumbnails.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: profile
          label: App Profiles Storage
          description: Stores the Application Profiles.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: video
          label: App Encoded Video Storage
          description: Stores the Encoded Videos.
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: Main Ingress
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
