# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{credentials}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
  - variable: solrCores
    group: "App Configuration"
    label: "Solr Cores"
    schema:
      type: string
      default: "testcore"
      required: true
  - variable: solrUsername
    group: "App Configuration"
    label: "Solr Admin Username"
    schema:
      type: string
      default: "test"
      required: true
  - variable: solrPassword
    group: "App Configuration"
    label: "Solr Admin Password"
    schema:
      type: string
      default: ""
      required: true
  - variable: solrOpts
    group: "App Configuration"
    label: "Solr Opts"
    schema:
      type: string
      default: ""
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 8983
                              required: true
# Include{externalInterfaces}

# Include{serviceList}
# Include{persistenceRoot}
      additional_attrs: true
      type: dict
      attrs:
        - variable: db
          label: "DB Storage"
          description: "Stores the old Application Database."
          schema:
            type: dict
            hidden: true
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 1001
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID this App of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
