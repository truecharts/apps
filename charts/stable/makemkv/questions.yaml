# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{credentials}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
                                - variable: env
                                  group: "App Configuration"
                                  label: "Image Environment"
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: VNC_PASSWORD
                                        label: "VNC_PASSWORD"
                                        description: "Password needed to connect to the application's GUI. See the VNC Password section for more details."
                                        schema:
                                          type: string
                                          private: true
                                          default: ""
# Include{containerBasic}
# Include{containerAdvanced}
  - variable: makemkv
    group: "App Configuration"
    label: "MakeMKV Configuration"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: ENABLE_CJK_FONT
          label: "ENABLE_CJK_FONT"
          description: "When set to true, open-source computer font WenQuanYi Zen Hei is installed. "
          schema:
            type: boolean
            default: false
        - variable: KEEP_APP_RUNNING
          label: "KEEP_APP_RUNNING"
          description: "When set to true, the application will be automatically restarted if it crashes or if a user quits it."
          schema:
            type: boolean
            default: false
        - variable: SECURE_CONNECTION
          label: "SECURE_CONNECTION"
          description: "When set to true, an encrypted connection is used to access the application's GUI (either via a web browser or VNC client)."
          schema:
            type: boolean
            default: false
        - variable: DARK_MODE
          label: "DARK_MODE"
          description: "When set to true, MakeMKV UI is changed to Dark Mode"
          schema:
            type: boolean
            default: false
        - variable: DISPLAY_WIDTH
          label: "DISPLAY_WIDTH"
          description: "Width (in pixels) of the application's window."
          schema:
            type: int
            default: 1280
            required: true
        - variable: DISPLAY_HEIGHT
          label: "DISPLAY_HEIGHT"
          description: "Height (in pixels) of the application's window."
          schema:
            type: int
            default: 768
            required: true
        - variable: MAKEMKV_KEY
          label: "MAKEMKV_KEY"
          description: "MakeMKV registration key to use."
          schema:
            type: string
            default: "BETA"
            required: true
        - variable: AUTO_DISC_RIPPER_INTERVAL
          label: "AUTO_DISC_RIPPER_INTERVAL"
          description: "Interval, in seconds, the automatic disc ripper checks for the presence of a DVD/Blu-ray discs."
          schema:
            type: int
            default: 5
            required: true
        - variable: AUTO_DISC_RIPPER_BD_MODE
          label: "AUTO_DISC_RIPPER_BD_MODE"
          description: "Rip mode of Blu-ray discs. mkv is the default mode, where a set of MKV files are produced. When set to backup, a copy of the (decrypted) file system is created instead. This applies to Blu-ray discs only. For DVD discs, MKV files are always produced."
          schema:
            type: string
            default: "mkv"
            required: true
        - variable: AUTO_DISC_RIPPER_MAKEMKV_PROFILE
          label: "AUTO_DISC_RIPPER_MAKEMKV_PROFILE"
          description: "Filename of the custom MakeMKV profile the automatic disc ripper should use. The profile is expected to be found under the /config folder of the container."
          schema:
            type: string
            default: ""
        - variable: AUTO_DISC_RIPPER
          label: "AUTO_DISC_RIPPER"
          description: "When set to true, disc is ejected from the drive when ripping is terminated."
          schema:
            type: boolean
            default: false
        - variable: AUTO_DISC_RIPPER_EJECT
          label: "AUTO_DISC_RIPPER_EJECT"
          description: "When set to true, disc is ejected from the drive when ripping is terminated."
          schema:
            type: boolean
            default: false
        - variable: AUTO_DISC_RIPPER_PARALLEL_RIP
          label: "AUTO_DISC_RIPPER_PARALLEL_RIP"
          description: "When set to true, discs from all available optical drives are ripped in parallel. Else, each disc from optical drives is ripped one at time."
          schema:
            type: boolean
            default: false
        - variable: AUTO_DISC_RIPPER_NO_GUI_PROGRESS
          label: "AUTO_DISC_RIPPER_NO_GUI_PROGRESS"
          description: "When set to true, progress of discs ripped by the automatic disc ripper is not shown in the MakeMKV GUI."
          schema:
            type: boolean
            default: false
        - variable: AUTO_DISC_RIPPER_FORCE_UNIQUE_OUTPUT_DIR
          label: "AUTO_DISC_RIPPER_FORCE_UNIQUE_OUTPUT_DIR"
          description: "When set to false, files are written to /output/DISC_LABEL/, where DISC_LABEL is the label/name of the disc. If this directory exists, then files are written to /output/DISC_LABEL-XXXXXX, where XXXXXX are random readable characters. When set to true, the /output/DISC_LABEL-XXXXXX pattern is always used."
          schema:
            type: boolean
            default: false
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10180
                              required: true
        - variable: vnc
          label: "VNC Service"
          description: "VNC Service"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: vnc
                      label: "VNC Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10181
                              required: true
# Include{externalInterfaces}

# Include{serviceList}
# Include{persistenceRoot}
        - variable: config
          label: "App Config Storage"
          description: "Stores the Application Configuration."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: storage
          label: "App Storage"
          description: "Application Storage."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: output
          label: "App Output Storage"
          description: "Stores the Application Output."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
