# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{credentials}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
                                - variable: env
                                  label: Image Environment
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: USERNAME
                                        label: "USERNAME"
                                        description: "Your Steam username goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION You have to disable Steam Guard)."
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: PASSWRD
                                        label: "PASSWRD"
                                        description: "Your Steam password goes here if you want to install a game that needs a valid account, otherwise leave it blank (ATTENTION You have to disable Steam Guard)."
                                        schema:
                                          type: string
                                          private: true
                                          default: ""
                                      - variable: VALIDATE
                                        label: "VALIDATE"
                                        description: "Set the Variable to true if you want to validate the installation otherwise leave it blank."
                                        schema:
                                          type: boolean
                                          default: true
                                      - variable: GAME_PARAMS
                                        label: "GAME_PARAMS"
                                        description: "Enter here your extra game startup parameters if needed starting with (eg rcon.port 27016 rcon.password YOURPASSWORD dont forget to add also a new port here on the template page with container and host port set to the corresponding RCON port)"
                                        schema:
                                          type: string
                                          default: "+server.maxplayers 10"
                                      - variable: GAME_ID
                                        label: "GAME_ID"
                                        description: "The GAMEID that the container downloads at startup. If you want to use a beta version of the game enter this 258550 -beta staging or 258550 -beta prerelease (without quotes)."
                                        schema:
                                          type: string
                                          default: "258550"
                                      - variable: SERVER_NAME
                                        label: "SERVER_NAME"
                                        description: "Name of the Server goes here"
                                        schema:
                                          type: string
                                          default: "RustDockerServer"
                                      - variable: SERVER_DISCRIPTION
                                        label: "SERVER_DISCRIPTION"
                                        description: "Server Description goes here"
                                        schema:
                                          type: string
                                          default: "Simple TrueNAS Rust Docker Server"
                                      - variable: OXIDE_MOD
                                        label: "OXIDE_MOD"
                                        description: "Set to true (without quotes) to enable Oxide Mod, otherwise leave empty (the container will check on every startrestart if there is a newer version available)."
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: GAME_PORT
                                        label: "GAME_PORT"
                                        description: "Game port on which the server is running (has to match the port mapping in your container)."
                                        schema:
                                          type: string
                                          default: "28015"
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 28015
                              required: true
# Include{externalInterfaces}

# Include{serviceList}
# Include{persistenceRoot}
        - variable: steamcmd
          label: "steamcmd Storage"
          description: "Container Path serverdatasteamcmd"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: serverfiles
          label: "serverfiles Storage"
          description: "Container Path serverdataserverfiles"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
