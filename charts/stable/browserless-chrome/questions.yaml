# Include{groups}
portals:
  open:
# Include{portalLink}
  metrics:
# Include{portalLink}
    path: "/metrics"
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
                                - variable: imageSelector
                                  label: "Select Image"
                                  schema:
                                    type: string
                                    default: "image"
                                    enum:
                                      - value: "image"
                                        description: "Chrome"
                                      - value: "puppeteerImage"
                                        description: "Puppeteer"
                                - variable: env
                                  label: "Image Environment"
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: TOKEN
                                        label: "TOKEN"
                                        description: "You can optionally apply a TOKEN param that will restrict calls without a token query-string parameter"
                                        schema:
                                          type: string
                                          default: ""
                                          private: true
                                      - variable: HOST
                                        label: "HOST"
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: WORKSPACE_DELETE_EXPIRED
                                        label: "WORKSPACE_DELETE_EXPIRED"
                                        description: "This will have browserless delete files older than 30 days in the workspace, checking once a day"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: WORKSPACE_EXPIRE_DAYS
                                        label: "WORKSPACE_EXPIRE_DAYS"
                                        description: "Attempts to delete files older than X days in the workspace directory"
                                        schema:
                                          type: int
                                          default: 30
                                      - variable: CHROME_REFRESH_TIME
                                        label: "CHROME_REFRESH_TIME"
                                        description: "The CHROME_REFRESH_TIME flag accepts a value in milliseconds to keep Chrome running before it attempts to close it."
                                        schema:
                                          type: int
                                          default: 3600000
                                      - variable: MAX_CONCURRENT_SESSIONS
                                        label: "MAX_CONCURRENT_SESSIONS"
                                        description: "Since running Chrome can be rather resource intensive you'll probably want to limit the number of concurrent sessions."
                                        schema:
                                          type: int
                                          default: 5
                                      - variable: MAX_QUEUE_LENGTH
                                        label: "MAX_QUEUE_LENGTH"
                                        description: "This value determines how many items in the queue are allowed before requests are issued a 429 response code and closed."
                                        schema:
                                          type: int
                                          default: 5
                                      - variable: CONNECTION_TIMEOUT
                                        label: "CONNECTION_TIMEOUT"
                                        description: "How long any session can run for in milliseconds. defaults to 30000 ms or 30 seconds"
                                        schema:
                                          type: int
                                          default: 30000
                                      - variable: DEFAULT_BLOCK_ADS
                                        label: "DEFAULT_BLOCK_ADS"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: DEFAULT_HEADLESS
                                        label: "DEFAULT_HEADLESS"
                                        schema:
                                          type: boolean
                                          default: true
                                      - variable: DEFAULT_IGNORE_HTTPS_ERRORS
                                        label: "DEFAULT_IGNORE_HTTPS_ERRORS"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: DEFAULT_IGNORE_DEFAULT_ARGS
                                        label: "DEFAULT_IGNORE_DEFAULT_ARGS"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: ENABLE_API_GET
                                        label: "ENABLE_API_GET"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: FUNCTION_ENABLE_INCOGNITO_MODE
                                        label: "FUNCTION_ENABLE_INCOGNITO_MODE"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: EXIT_ON_HEALTH_FAILURE
                                        label: "EXIT_ON_HEALTH_FAILURE"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: DISABLE_AUTO_SET_DOWNLOAD_BEHAVIOR
                                        label: "DISABLE_AUTO_SET_DOWNLOAD_BEHAVIOR"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: ENABLE_DEBUGGER
                                        label: "ENABLE_DEBUGGER"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: ENABLE_CORS
                                        label: "ENABLE_CORS"
                                        schema:
                                          type: boolean
                                          default: false
                                      - variable: ENABLE_XVBF
                                        label: "ENABLE_XVBF"
                                        schema:
                                          type: boolean
                                          default: false
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
# Include{serviceMain}
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10194
                              required: true
# Include{externalInterfaces}

# Include{serviceList}
# Include{persistenceRoot}
        - variable: downloads
          label: "App Downloads Storage"
          description: "Stores the Application Downloads."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: metrics
          label: "App Metrics Storage"
          description: "Stores the Application Metrics."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID this App of the user running the application"
                schema:
                  type: int
                  default: 568
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
