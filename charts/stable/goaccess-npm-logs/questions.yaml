# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}
# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
                                - variable: env
                                  label: Image Environment
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: SKIP_ARCHIVED_LOGS
                                        label: "SKIP_ARCHIVED_LOGS"
                                        description: "(Optional) Defaults to False. Set to True to skip archived logs, i.e. proxy-host.gz"
                                        schema:
                                          type: string
                                          default: "False"
                                      - variable: DEBUG
                                        label: "DEBUG"
                                        description: "(Optional) HTML version of the running goaccess.conf wihtin the container"
                                        schema:
                                          type: string
                                          default: "False"
                                      - variable: BASIC_AUTH
                                        label: "BASIC_AUTH"
                                        description: "(Optional) Defaults to False. Set to True to enable nginx basic authentication. Docker container needs to stopped or restarted each time this flag is modified. This allows for the .htpasswd file to be changed accordingly."
                                        schema:
                                          type: string
                                          default: "True"
                                      - variable: BASIC_AUTH_USERNAME
                                        label: "BASIC_AUTH_USERNAME"
                                        description: "Optional) Requires BASICAUTH to bet set to True. Username for basic authentication."
                                        schema:
                                          type: string
                                          default: "x"
                                      - variable: BASIC_AUTH_PASSWORD
                                        label: "BASIC_AUTH_PASSWORD"
                                        description: "(Optional) Requires BASICAUTH to bet set to True. Password for basic authentication."
                                        schema:
                                          type: string
                                          default: "x"
                                      - variable: EXCLUDE_IPS
                                        label: "EXCLUDE_IPS"
                                        description: "(Optional) IP Addresses or range of IPs delimited by comma refer to httpsgoaccess.ioman. For example 192.168.0.1-192.168.0.100 or 127.0.0.1,192.168.0.1-192.168.0.100"
                                        schema:
                                          type: string
                                          default: ""
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 7880
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: hostpath1
          label: "hostpath1 Storage"
          description: "Container Path optlog"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}
              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568
# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
