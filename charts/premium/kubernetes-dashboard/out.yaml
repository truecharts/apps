---
# Source: kubernetes-dashboard/templates/common.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-kubernetes-dashboard
  namespace: default
  labels:
    app: "kubernetes-dashboard-1.0.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-dashboard"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-dashboard-1.0.0"
    release: "release-name"
automountServiceAccountToken: false
---
# Source: kubernetes-dashboard/templates/secret.yaml
# kubernetes-dashboard-certs
apiVersion: v1
type: Opaque
kind: Secret
metadata:
  name: kubernetes-dashboard-certs
  namespace: default
---
# Source: kubernetes-dashboard/templates/secret.yaml
# kubernetes-dashboard-csrf
apiVersion: v1
type: Opaque
kind: Secret
metadata:
  name: kubernetes-dashboard-csrf
  namespace: default
---
# Source: kubernetes-dashboard/templates/secret.yaml
# kubernetes-dashboard-key-holder
apiVersion: v1
type: Opaque
kind: Secret
metadata:
  name: kubernetes-dashboard-key-holder
  namespace: default
---
# Source: kubernetes-dashboard/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubernetes-dashboard-settings
  namespace: default
  labels:
    app: "kubernetes-dashboard-1.0.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-dashboard"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-dashboard-1.0.0"
    release: "release-name"
data:
  _global: '{"itemsPerPage":100}'
---
# Source: kubernetes-dashboard/templates/common.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: tcportal-open
  namespace: default
  labels:
    app: "kubernetes-dashboard-1.0.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-dashboard"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-dashboard-1.0.0"
    release: "release-name"
data:
  host: 127.0.0.1
  path: /
  port: "443"
  protocol: https
  url: https://127.0.0.1:443/
---
# Source: kubernetes-dashboard/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-name-kubernetes-dashboard
  labels:
    app: "kubernetes-dashboard-1.0.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-dashboard"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-dashboard-1.0.0"
    release: "release-name"
rules:
  - apiGroups:
    - ""
    resources:
    - "secrets"
    resourceNames:
    - "kubernetes-dashboard-key-holder"
    - "kubernetes-dashboard-certs"
    - "kubernetes-dashboard-csrf"
    verbs:
    - "get"
    - "update"
    - "delete"
  - apiGroups:
    - ""
    resources:
    - "configmaps"
    resourceNames:
    - "kubernetes-dashboard-settings"
    verbs:
    - "get"
    - "update"
  - apiGroups:
    - ""
    resources:
    - "services"
    resourceNames:
    - "heapster"
    - "dashboard-metrics-scraper"
    verbs:
    - "proxy"
  - apiGroups:
    - ""
    resources:
    - "services/proxy"
    resourceNames:
    - "heapster"
    - "http:heapster:"
    - "https:heapster:"
    - "dashboard-metrics-scraper"
    - "http:dashboard-metrics-scraper"
    verbs:
    - "get"
  - apiGroups:
    - "metrics.k8s.io"
    resources:
    - "pods"
    - "nodes"
    verbs:
    - "get"
    - "list"
    - "watch"
  - apiGroups:
    - "*"
    resources:
    - "*"
    verbs:
    - "*"
---
# Source: kubernetes-dashboard/templates/common.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-name-kubernetes-dashboard
  labels:
    app: "kubernetes-dashboard-1.0.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-dashboard"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-dashboard-1.0.0"
    release: "release-name"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-name-kubernetes-dashboard
subjects:
  - kind: ServiceAccount
    name: release-name-kubernetes-dashboard
    namespace: default
---
# Source: kubernetes-dashboard/templates/common.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-kubernetes-dashboard
  namespace: default
  labels:
    app: "kubernetes-dashboard-1.0.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-dashboard"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-dashboard-1.0.0"
    release: "release-name"
    service.name: "main"
  annotations:
    traefik.ingress.kubernetes.io/service.serversscheme: "https"
spec:
  type: ClusterIP
  publishNotReadyAddresses: false
  ports:
    - name: main
      port: 443
      protocol: TCP
      targetPort: 8443
  selector:
    pod.name: main
    app.kubernetes.io/name: kubernetes-dashboard
    app.kubernetes.io/instance: release-name
---
# Source: kubernetes-dashboard/templates/common.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-kubernetes-dashboard
  namespace: default
  labels:
    app: "kubernetes-dashboard-1.0.0"
    app.kubernetes.io/instance: "release-name"
    app.kubernetes.io/managed-by: "Helm"
    app.kubernetes.io/name: "kubernetes-dashboard"
    app.kubernetes.io/version: "latest"
    helm-revision: "1"
    helm.sh/chart: "kubernetes-dashboard-1.0.0"
    release: "release-name"
spec:  
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      pod.name: main
      app.kubernetes.io/name: kubernetes-dashboard
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app: "kubernetes-dashboard-1.0.0"
        app.kubernetes.io/instance: "release-name"
        app.kubernetes.io/managed-by: "Helm"
        app.kubernetes.io/name: "kubernetes-dashboard"
        app.kubernetes.io/version: "latest"
        helm-revision: "1"
        helm.sh/chart: "kubernetes-dashboard-1.0.0"
        pod.lifecycle: "permanent"
        pod.name: "main"
        release: "release-name"
      annotations:
        checksum/cnpg: "ffd338b55cc50a8b366097eec597eeb134dee46563555614453e28233d208d00"
        checksum/configmaps: "7fd8c767f8289254a162da308b576134862c3083efe22b9da1c2fdaee79b6675"
        checksum/mariadb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/mongodb: "09c85576cb45b1eecd1467732b11ea8fa3363b0105c465f02a6ad64991521d52"
        checksum/persistence: "5b9e5cfc3b174e09d19000309caa5867e36a46f4f31651127ef9ef776bba8877"
        checksum/redis: "013343a028cbb3f7e08f4ba7522702dd98e52632c688641074b0b1db3df29894"
        checksum/secrets: "44136fa355b3678a1146ad16f7e8649e94fb4fc21fe77e8310c060f61caaff8a"
        checksum/services: "6ec1139a488b171d96edb76be1a586efdde64f7d8e188ed400323365cd34d62a"
        checksum/solr: "29c14feeaddbf7762052db593898d274941f539cee681ddc613957587686f347"
    spec:
      serviceAccountName: release-name-kubernetes-dashboard
      automountServiceAccountToken: true
      runtimeClassName: 
      hostNetwork: false
      hostPID: false
      hostIPC: false
      shareProcessNamespace: false
      enableServiceLinks: false
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/arch: "amd64"
      topologySpreadConstraints:
        - maxSkew: 1
          whenUnsatisfiable: ScheduleAnyway
          topologyKey: "kubernetes.io/hostname"
          labelSelector:
            matchLabels:      
              pod.name: main
              app.kubernetes.io/name: kubernetes-dashboard
              app.kubernetes.io/instance: release-name
          nodeAffinityPolicy: Honor
          nodeTaintsPolicy: Honor
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      terminationGracePeriodSeconds: 60
      securityContext:
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups:
          - 568
        sysctls: []
      hostUsers: false
      containers:
        - name: release-name-kubernetes-dashboard
          image: kubernetesui/dashboard:v2.6.1
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          args:
            - "--namespace='default'"
            - "--auto-generate-certificates"
            - "--sidecar-host='http://127.0.0.1:8000'"
            - "--enable-insecure-login"
            - "--enable-skip-login"
            - "--system-banner='Powered by TrueCharts!'"
          ports:
            - name: main
              containerPort: 8443
              protocol: TCP
              hostPort: null
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: kubernetes-dashboard-certs
              mountPath: /certs
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            httpGet:
              port: 8443
              path: /
              scheme: HTTPS
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: 8443
              path: /
              scheme: HTTPS
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            httpGet:
              port: 8443
              path: /
              scheme: HTTPS
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
        - name: release-name-kubernetes-dashboard-scraper
          image: kubernetesui/metrics-scraper:v1.0.9
          imagePullPolicy: IfNotPresent
          tty: false
          stdin: false
          volumeMounts:
            - name: devshm
              mountPath: /dev/shm
              readOnly: false
            - name: shared
              mountPath: /shared
              readOnly: false
            - name: tmp
              mountPath: /tmp
              readOnly: false
            - name: varlogs
              mountPath: /var/logs
              readOnly: false
            - name: varrun
              mountPath: /var/run
              readOnly: false
          livenessProbe:
            httpGet:
              port: 8000
              path: /
              scheme: HTTPS
            initialDelaySeconds: 12
            failureThreshold: 5
            successThreshold: 1
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            httpGet:
              port: 8000
              path: /
              scheme: HTTPS
            initialDelaySeconds: 10
            failureThreshold: 4
            successThreshold: 2
            timeoutSeconds: 5
            periodSeconds: 12
          startupProbe:
            httpGet:
              port: 8000
              path: /
              scheme: HTTPS
            initialDelaySeconds: 10
            failureThreshold: 60
            successThreshold: 1
            timeoutSeconds: 3
            periodSeconds: 5
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits: 
              cpu: 4000m 
              memory: 8Gi
          securityContext:
            runAsNonRoot: true
            runAsUser: 568
            runAsGroup: 568
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            privileged: false
            seccompProfile:
              type: RuntimeDefault
            capabilities:
              add: []
              drop:
                - ALL
          env:
            - name: "TZ"
              value: "UTC"
            - name: "UMASK"
              value: "0022"
            - name: "UMASK_SET"
              value: "0022"
            - name: "NVIDIA_VISIBLE_DEVICES"
              value: "void"
            - name: "S6_READ_ONLY_ROOT"
              value: "1"
      volumes:
        - name: devshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: kubernetes-dashboard-certs
          secret:
            secretName: kubernetes-dashboard-certs
            optional: false
        - name: shared
          emptyDir: {}
        - name: tmp
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varlogs
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        - name: varrun
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
