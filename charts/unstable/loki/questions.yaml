# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}


# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
  - variable: config
    group: "App Configuration"
    label: "Loki Settings"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: ingester
          label: "Ingester"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: chunk_idle_period
                label: "chunk_idle_period"
                schema:
                  type: string
                  default: "3m"
                  required: true
              - variable: chunk_block_size
                label: "chunk_block_size"
                schema:
                  type: int
                  default: 262144
                  required: true
              - variable: chunk_retain_period
                label: "chunk_retain_period"
                schema:
                  type: string
                  default: "1m"
              - variable: max_transfer_retries
                label: "max_transfer_retries"
                schema:
                  type: int
                  default: 0
        - variable: limits_config
          label: "Limits Config"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: enforce_metric_name
                label: "Enforce Metric Name"
                schema:
                  type: boolean
                  default: false
              - variable: reject_old_samples
                label: "Reject Old Samples"
                schema:
                  type: boolean
                  default: true
              - variable: reject_old_samples_max_age
                label: "Reject Old Samples - Max Age"
                schema:
                  type: string
                  default: "168h"
                  required: true
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 3100
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{vctRoot}
      additional_attrs: true
      type: dict
      attrs:
        - variable: data
          label: "App data Storage"
          description: "Stores the Application Data."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 568
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 568
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
