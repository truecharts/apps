# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}
# Include{containerBasic}
# Include{containerAdvanced}

  - variable: wger
    group: "App Configuration"
    label: "Image Environment"
    schema:
      additional_attrs: true
      type: dict
      attrs:
        - variable: general
          label: "General Configuration"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: sync_exercises_on_startup
                label: "SYNC_EXERCISES_ON_STARTUP (Slow Startup)"
                description: "Enabling that can greatly impact the startup of this app"
                schema:
                  type: boolean
                  default: false
              - variable: download_exercise_images_on_startup
                label: "DOWNLOAD_EXERCISE_IMAGES_ON_STARTUP (Slow Startup)"
                description: "Enabling that can greatly impact the startup of this app"
                schema:
                  type: boolean
                  default: false
              - variable: allow_registration
                label: "ALLOW_REGISTRATION"
                schema:
                  type: boolean
                  default: true
              - variable: allow_guest_users
                label: "ALLOW_GUEST_USERS"
                schema:
                  type: boolean
                  default: true
              - variable: allow_upload_videos
                label: "ALLOW_UPLOAD_VIDEOS"
                schema:
                  type: boolean
                  default: true
              - variable: exercise_cache_ttl
                label: "EXERCISE_CACHE_TTL"
                schema:
                  type: string
                  required: true
                  default: "3600"
              - variable: django_perform_migrations
                label: "DJANGO_PERFORM_MIGRATIONS"
                schema:
                  type: boolean
                  default: true
              - variable: django_debug
                label: "DJANGO_DEBUG"
                schema:
                  type: boolean
                  default: false
        - variable: mail
          label: "Mail Configuration"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: enable_email
                label: "Email Settings"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: from_email
                      label: "FROM_EMAIL"
                      schema:
                        type: string
                        required: true
                        default: ""
                    - variable: email_host
                      label: "EMAIL_HOST"
                      schema:
                        type: string
                        required: true
                        default: ""
                    - variable: email_port
                      label: "EMAIL_PORT"
                      schema:
                        type: int
                        required: true
                        default: 587
                    - variable: email_host_user
                      label: "EMAIL_HOST_USER"
                      schema:
                        type: string
                        required: true
                        default: ""
                    - variable: email_host_password
                      label: "EMAIL_HOST_PASSWORD"
                      schema:
                        type: string
                        required: true
                        private: true
                        default: ""
                    - variable: email_use_tls
                      label: "EMAIL_USE_TLS"
                      schema:
                        type: boolean
                        default: false
                    - variable: email_use_ssl
                      label: "EMAIL_USE_SSL"
                      schema:
                        type: boolean
                        default: false
        - variable: captca
          label: "Captca Configuration"
          schema:
            additional_attrs: true
            type: dict
            attrs:
              - variable: captchasettings
                label: "Captcha Settings"
                schema:
                  type: boolean
                  default: false
                  show_subquestions_if: true
                  subquestions:
                    - variable: recaptha_public_key
                      label: "RECAPTCHA_PUBLIC_KEY"
                      schema:
                        type: string
                        default: ""
                    - variable: recaptha_private_key
                      label: "RECAPTCHA_PRIVATE_KEY"
                      schema:
                        type: string
                        private: true
                        default: ""
                    - variable: nocaptcha
                      label: "NOCAPTCHA"
                      schema:
                        type: boolean
                        default: true

# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10249
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: media
          label: "App Media Storage"
          description: "Stores the Application Media."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 1000
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 1000
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
        - variable: fsGroup
          label: "fsGroup"
          description: "The group that should own ALL storage."
          schema:
            type: int
            default: 1000

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
