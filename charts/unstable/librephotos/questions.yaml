# Include{groups}
portals:
  open:
# Include{portalLink}
questions:
# Include{global}
# Include{workload}
# Include{workloadDeployment}

# Include{replicas1}
# Include{podSpec}
# Include{containerMain}

                                - variable: env
                                  group: "App Configuration"
                                  label: "Image Environment"
                                  schema:
                                    additional_attrs: true
                                    type: dict
                                    attrs:
                                      - variable: ADMIN_EMAIL
                                        label: "ADMIN_EMAIL"
                                        description: "Email for the administrative user"
                                        schema:
                                          type: string
                                          required: true
                                          default: ""
                                      - variable: ADMIN_USERNAME
                                        label: "ADMIN_USERNAME"
                                        description: "Username for the Administrator login"
                                        schema:
                                          type: string
                                          required: true
                                          default: ""
                                      - variable: ADMIN_PASSWORD
                                        label: "ADMIN_PASSWORD"
                                        description: "Password for the administrative user you set above"
                                        schema:
                                          type: string
                                          required: true
                                          default: ""
                                      - variable: MAPBOX_API_KEY
                                        label: "MAPBOX_API_KEY"
                                        description: "Get a Map box API Key https://account.mapbox.com/auth/signup/"
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: SKIP_PATTERNS
                                        label: "SKIP_PATTERNS"
                                        description: "Comma delimited list of patterns to ignore"
                                        schema:
                                          type: string
                                          default: ""
                                      - variable: WEB_CONCURRENCY
                                        label: "WEB_CONCURRENCY"
                                        description: "Number of workers, which take care of the request to the api. This setting can dramatically affect the ram usage."
                                        schema:
                                          type: int
                                          required: true
                                          default: 2
                                      - variable: HEAVYWEIGHT_PROCESS
                                        label: "HEAVYWEIGHT_PROCESS"
                                        description: "Number of workers, when scanning pictures. This setting can dramatically affect the ram usage"
                                        schema:
                                          type: int
                                          required: true
                                          default: 1
                                      - variable: DEBUG
                                        label: "DEBUG"
                                        description: "Enable Debug"
                                        schema:
                                          type: boolean
                                          default: false
# Include{containerBasic}
# Include{containerAdvanced}
# Include{containerConfig}
# Include{podOptions}
# Include{serviceRoot}
        - variable: main
          label: "Main Service"
          description: "The Primary service on which the healthcheck runs, often the webUI"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{serviceSelectorLoadBalancer}
# Include{serviceSelectorExtras}
                    - variable: main
                      label: "Main Service Port Configuration"
                      schema:
                        additional_attrs: true
                        type: dict
                        attrs:
                          - variable: port
                            label: "Port"
                            description: "This port exposes the container port on the service"
                            schema:
                              type: int
                              default: 10161
                              required: true
# Include{serviceExpertRoot}
# Include{serviceExpert}
# Include{serviceList}
# Include{persistenceRoot}
        - variable: media
          label: "App Media Storage"
          description: "Stores the Application Media."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: protected-media
          label: "App Protected Media Storage"
          description: "Stores the Application Protected Media."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
        - variable: logs
          label: "App Log Storage"
          description: "Stores the Application Logs."
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{persistenceBasic}
# Include{persistenceList}
# Include{ingressRoot}
        - variable: main
          label: "Main Ingress"
          schema:
            additional_attrs: true
            type: dict
            attrs:
# Include{ingressDefault}
# Include{ingressTLS}
# Include{ingressTraefik}
# Include{ingressAdvanced}
# Include{ingressList}
# Include{securityContextRoot}

              - variable: runAsUser
                label: "runAsUser"
                description: "The UserID of the user running the application"
                schema:
                  type: int
                  default: 0
              - variable: runAsGroup
                label: "runAsGroup"
                description: "The groupID of the user running the application"
                schema:
                  type: int
                  default: 0
# Include{securityContextContainer}
# Include{securityContextAdvanced}
# Include{securityContextPod}
              - variable: fsGroup
                label: "fsGroup"
                description: "The group that should own ALL storage."
                schema:
                  type: int
                  default: 568

# Include{resources}
# Include{advanced}
# Include{addons}
# Include{codeserver}
# Include{netshoot}
# Include{vpn}
# Include{documentation}
