{
  "semanticCommits": "enabled",
  "extends": ["helpers:pinGitHubActionDigests"],
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": ["prIgnoreNotification"],
  "commitMessageTopic": "{{depName}}",
  "commitMessageExtra": "to {{newVersion}}",
  "commitMessageSuffix": "",
  "rebaseWhen": "conflicted",
  "prConcurrentLimit": 150,
  "timezone":"Europe/Amsterdam",
  "pinDigests": true,
  "automerge": false,
  "gitAuthor": "TrueCharts-Admin <bot@truecharts.org>",
  "helm-values": {
    "fileMatch": ["charts/.+/.*values\\.yaml$", "charts/.+/SCALE/.*_values\\.yaml$"]
  },
  "helmv3": {
    "fileMatch": ["charts/.+/Chart\\.yaml$"]
  },
  "packageRules": [
    // Bundle Github Actions
    {
      "matchManagers": ["github-actions"],
      "groupName": "Github-Actions",
      "automerge": true
    },
    // Setup datasources for dep updates
    {
      "datasources": ["helm"],
      "matchManagers": ["helmv3"],
      "commitMessageTopic": "Helm chart {{depName}}"
    },
    // global docker datasource settings
    {
      "datasources": ["docker"],
      "enabled": true,
      "pinDigests": true,
      "automerge": false,
      "autoApprove": true,
      "separateMinorPatch": true,
      "commitMessageTopic": "container image {{depName}}",
      "commitMessageExtra": "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}@{{newDigestShort}}",
    },
    // Setup datasources for github actions
    {
      "matchManagers": ["github-actions"],
      "excludePackageNames": ["stefanzweifel/git-auto-commit-action"],
      "automerge": true,
    },
    //
    // helm deps
    //
    {
      "matchDatasources": ["helm"],
      "updateTypes": ["major"],
      "automerge": false,
      "bumpVersion": "major",
      "labels": ["update/helm/dependency/major"],
      "groupName": ["helm dependency major"],
      "matchPaths": ["charts/dependency/**", "templates/**"],
    },
    {
      "matchDatasources": ["helm"],
      "automerge": false,
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "bumpVersion": "patch",
      "labels": ["update/helm/dependency/non-major", "automerge"],
      "matchPaths": ["charts/dependency/**", "templates/**"],
      "groupName": "helm dependency non-major",
    },
    //
    // helm ent and operators
    //
    {
      "matchDatasources": ["helm"],
      "updateTypes": ["major"],
      "bumpVersion": "major",
      "enabled": true,
      "labels": ["update/helm/general/major"],
      "groupName": ["helm general major"],
      "matchPaths": ["charts/enterprise/**", "charts/operators/**"],
      "schedule": [
        "before 10pm on tuesday"
      ],
    },
    {
      "matchDatasources": ["helm"],
      "automerge": false,
      "matchUpdateTypes": [
        "minor"
      ],
      "enabled": true,
      "bumpVersion": "patch",
      "labels": ["update/helm/general/non-major", "automerge"],
      "groupName": "helm general non-major",
      "matchPaths": ["charts/enterprise/**", "charts/operators/**"],
      "schedule": [
        "before 10pm on tuesday"
      ],
    },
    {
      "matchDatasources": ["helm"],
      "automerge": true,
      "matchUpdateTypes": [
        "digest",
        "patch",
        "pin"
      ],
      "enabled": true,
      "bumpVersion": "patch",
      "labels": ["update/helm/general/non-major", "automerge"],
      "groupName": "helm general non-major",
      "matchPaths": ["charts/enterprise/**", "charts/operators/**"],
      "schedule": [
        "before 10pm on tuesday"
      ],
    },
    //
    // helm charts
    //
    {
      "matchDatasources": ["helm"],
      "updateTypes": ["major"],
      "bumpVersion": "major",
      "enabled": false,
      "labels": ["update/helm/general/major"],
      "groupName": ["helm general major"],
      "matchPaths": ["charts/incubator/**", "charts/SCALE/**", "charts/dev/**", "charts/stable/**", "templates/app/**"],
      "schedule": [
        "before 10pm on tuesday"
      ],
    },

    {
      "matchDatasources": ["helm"],
      "automerge": true,
      "enabled": true,
      "matchUpdateTypes": [
        "minor"
      ],
      "bumpVersion": "patch",
      "labels": ["update/helm/general/non-major", "automerge"],
      "groupName": "helm general non-major",
      "matchPaths": ["charts/incubator/**", "charts/SCALE/**", "charts/dev/**", "charts/stable/**", "templates/app/**"],
      "schedule": [
        "before 10pm on tuesday"
      ],
    },
    {
      "matchDatasources": ["helm"],
      "automerge": true,
      "enabled": true,
      "matchUpdateTypes": [
        "digest",
        "patch",
        "pin"
      ],
      "bumpVersion": "patch",
      "labels": ["update/helm/general/non-major", "automerge"],
      "groupName": "helm general non-major",
      "matchPaths": ["charts/incubator/**", "charts/SCALE/**", "charts/dev/**", "charts/stable/**", "templates/app/**"],
      "schedule": [
        "before 10pm on tuesday"
      ],
    },
    //
    // Tag updates for semantic Docker tags on enterprise and operatorApps
    //
    {
      "matchDatasources": ["docker"],
      "updateTypes": ["major"],
      "enabled": true,
      "bumpVersion": "major",
      "labels": ["update/docker/major"],
      "matchPaths": ["charts/enterprise/**", "charts/operators/**"],
    },
    {
      "matchDatasources": ["docker"],
      "automerge": false,
      "matchUpdateTypes": [
        "minor",
      ],
      "enabled": true,
      "bumpVersion": "minor",
      "labels": ["update/docker/minor"],
      "matchPaths": ["charts/enterprise/**", "charts/operators/**"],
    },
    {
      "matchDatasources": ["docker"],
      "automerge": true,
      "matchUpdateTypes": [
        "patch",
        "digest",
        "pin",
      ],
      "bumpVersion": "patch",
      "enabled": true,
      "labels": ["update/docker/patch", "automerge"],
      "matchPaths": ["charts/enterprise/**", "charts/operator/**"],
    },
    //
    // Tag updates for semantic tags on incubator and dev charts
    //
    {
      "matchDatasources": ["docker"],
      "updateTypes": ["major"],
      "bumpVersion": "minor",
      "enabled": false,
      "labels": ["update/docker/incubator/major", "automerge"],
      "matchPaths": ["charts/incubator/**", "charts/dev/**"],
    },
    {
      "matchDatasources": ["docker"],
      "automerge": false,
      "matchUpdateTypes": [
        "minor",
        "patch",
        "digest",
      ],
      "bumpVersion": "patch",
      "enabled": false,
      "labels": ["update/docker/incubator/non-major", "automerge"],
      "matchPaths": ["charts/incubator/**", "charts/dev/**"],
    },
    {
      "matchDatasources": ["docker"],
      "automerge": false,
      "matchUpdateTypes": [
        "pin",
      ],
      "bumpVersion": "patch",
      "enabled": false,
      "labels": ["update/docker/incubator/non-major", "automerge"],
      "matchPaths": ["charts/incubator/**", "charts/dev/**"],
    },
    //
    // Tag updates for semantic tags on all but enterprise, operator and incubator Apps
    //
    {
      "matchDatasources": ["docker"],
      "updateTypes": ["major"],
      "bumpVersion": "minor",
      "enabled": true,
      "labels": ["update/docker/general/major", "automerge"],
      "matchPaths": ["charts/dependency/**", "charts/SCALE/**", "charts/stable/**", "templates/app/**"],
    },
    {
      "matchDatasources": ["docker"],
      "automerge": true,
      "matchUpdateTypes": [
        "minor",
      ],
      "bumpVersion": "minor",
      "enabled": true,
      "labels": ["update/docker/general/non-major", "automerge"],
      "matchPaths": ["charts/dependency/**", "charts/SCALE/**", "charts/library/**", "charts/stable/**", "templates/app/**"],
    },
    {
      "matchDatasources": ["docker"],
      "automerge": true,
      "matchUpdateTypes": [
        "patch",
        "digest",
        "pin",
      ],
      "bumpVersion": "patch",
      "enabled": true,
      "labels": ["update/docker/general/non-major", "automerge"],
      "matchPaths": ["charts/dependency/**", "charts/SCALE/**", "charts/library/**", "charts/stable/**", "templates/app/**"],
    },
    //
    // Tag semantic version type based on regex
    //
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>14)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["tccr.io/truecharts/postgresql"],
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^v(?<major>\\d{2})(?<minor>\\d{2})(?<patch>\\d{2})$",
      "matchPackageNames": ["tccr.io/truecharts/photoprism"],
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^v(?<major>\\d{4})-(?<minor>\\d{2})$",
      "matchPackageNames": ["tccr.io/truecharts/rss-bridge"],
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^v(?<major>\\d+)-(?<minor>\\d+)$",
      "matchPackagePrefixes": ["jupyter"],
      "groupName": "jupyter",
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d{1})(?<minor>\\d{1})(?<patch>\\d{2})$",
      "matchPackagePrefixes": ["tccr.io/truecharts/jitsi"],
      "groupName": "jitsi",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["altran1502/immich"],
      "groupName": "immich",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["portainer"],
      "groupName": "portainer",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/neko"],
      "groupName": "neko",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["https://lscr.io/linuxserver/webtop"],
      "groupName": "webtop",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/metallb"],
      "groupName": "metallb",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/zabbix"],
      "groupName": "zabbix",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["vikunja"],
      "groupName": "vikunja",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/ml-workspace"],
      "groupName": "ml-workspace",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["itzg/bungeecord"],
      "groupName": "bungeecord",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["itzg/minecraft-java"],
      "groupName": "minecraft-java",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/mealie"],
      "groupName": "mealie",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/librephotos"],
      "groupName": "librephotos",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/kitchenowl"],
      "groupName": "kitchenowl",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["ghcr.io/goauthentik/"],
      "groupName": "authentik",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/lama-cleaner"],
      "groupName": "lama-cleaner",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/rickroll"],
      "groupName": "rickroll",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/scrypted"],
      "groupName": "scrypted",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/docspell"],
      "groupName": "docspell",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/restreamer"],
      "groupName": "restreamer",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/penpot"],
      "groupName": "penpot",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/rdesktop"],
      "groupName": "rdesktop",
    },
    {
      "matchDatasources": ["docker"],
      "matchPackagePrefixes": ["tccr.io/truecharts/ersatztv"],
      "groupName": "ersatztv",
    },
    // matchPackagePatterns
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>14)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackagePatterns": ["^bitnami/postgresql$"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d{4})-(?<minor>\\d{2})-(?<patch>\\d{2})$",
      "matchPackagePatterns": ["^.*oznu\\/homebridge$"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)$",
      "matchPackagePatterns": ["^jupyter\\/.+$"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-ubuntu$",
      "matchPackagePatterns": ["^zabbix\\/zabbix-.*$"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^stable-(?<major>\\d{1})(?<minor>\\d{1})(?<patch>\\d{2}).*$",
      "matchPackagePatterns": ["^jitsi\\/.*$"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackagePatterns": ["^penpot\\/.*$"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^\\d*-jammy-(?<variant>.+)-v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackagePatterns": ["^.+\\/koush\\/scrypted$"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^version-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-.*$",
      "matchPackagePatterns": ["^.*linuxserver\\/deluge$"],
      "automerge": true,
    },
    // matchPackageNames
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-postgres-tomcat$",
      "matchPackageNames": ["xwiki"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^version-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["fireflyiii/core"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-\\d+\\.\\d+\\.\\d+$",
      "matchPackageNames": ["netboxcommunity/netbox"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d{2})(?<minor>\\d{2})(?<patch>\\d{2})$",
      "matchPackageNames": ["photoprism/photoprism"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["cloudflare/cloudflared"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^version-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["linuxserver/calibre-web"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^version-v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["linuxserver/heimdall"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^postgresql-v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["ghcr.io/umami-software/umami"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^version-v(?<major>\\d+)\\.(?<minor>\\d+)\\.?(?<patch>\\d*)$",
      "matchPackageNames": ["linuxserver/mylar3"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^[a-z0-9]{9}-v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-go\\d+\\.\\d+\\.\\d+$",
      "matchPackageNames": ["storjlabs/storagenode"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-php8\\.0-apache$",
      "matchPackageNames": ["joyqi/typecho"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^v\\.(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["difegue/lanraragi"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T\\d+-\\d+-\\d+Z$",
      "matchPackageNames": ["minio/minio"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^RELEASE\\.(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)T\\d+-\\d+-\\d+Z$",
      "matchPackageNames": ["minio/mc"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^apache-(?<major>\\d+)\\.(?<minor>\\d+)\\.?(?<patch>\\d*)-prod$",
      "matchPackageNames": ["kimai/kimai2"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)$",
      "matchPackageNames": ["rssbridge/rss-bridge"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)$",
      "matchPackageNames": ["alexta69/metube"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^focal-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["codeproject/senseai-server"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^latest-(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)$",
      "matchPackageNames": ["wangqiru/ttrss"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)(-\\d+)?$",
      "matchPackageNames": ["kiwix/kiwix-serve"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^v(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-omnibus$",
      "matchPackageNames": ["ghcr.io/analogj/scrutiny"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)-(?<minor>\\d+)-(?<patch>\\d+)$",
      "matchPackageNames": ["diygod/rsshub"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-amd64(nvidia)?$",
      "matchPackageNames": ["blakeblackshear/frigate"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d{1,4})\\.(?<minor>\\d+)\\.(?<patch>\\d+)$",
      "matchPackageNames": ["kopia/kopia"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d{4})\\.(?<minor>\\d{1,2})\\.(?<patch>\\d{1,2).*$",
      "matchPackageNames": ["alicevision/meshroom"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d{4})\\.(?<minor>\\d{1,2})\\.(?<patch>\\d{1,2})$",
      "matchPackageNames": ["itzg/bungeecord"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^java8-(?<major>\\d{4})\\.(?<minor>\\d{1,2})\\.(?<patch>\\d{1,2})$",
      "matchPackageNames": ["itzg/bungeecord"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^java11-(?<major>\\d{4})\\.(?<minor>\\d{1,2})\\.(?<patch>\\d{1,2})$",
      "matchPackageNames": ["itzg/bungeecord"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^java17-(?<major>\\d{4})\\.(?<minor>\\d{1,2})\\.(?<patch>\\d{1,2})$",
      "matchPackageNames": ["itzg/bungeecord"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d{4})\\.(?<minor>\d{1,2})\\.(?<patch>\\d{1,2})(-java\\d{1,2}.*)?$",
      "matchPackageNames": ["itzg/minecraft-server"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d{4})(?<minor>\\d{2})(?<patch>\\d{2})$",
      "matchPackageNames": ["ankicommunity/anki-sync-server"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)-jdk17$",
      "matchPackageNames": ["jenkins/jenkins"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^x64-v(?<major>\\d*)\\.(?<minor>\\d*)\\.(?<patch>\\d*)$",
      "matchPackageNames": ["housewrecker/gaps"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d*)\\.(?<minor>\\d*)\\.(?<patch>\\d*)-\\d*$",
      "matchPackageNames": ["sameersbn/apt-cacher-ng"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^release-(?<major>\\d*)\\.(?<minor>\\d*)$",
      "matchPackageNames": ["mattermost/mattermost-enterprise-edition"],
      "automerge": true,
    },
    {
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-.+$",
      "matchPackageNames": ["corentinth/it-tools"],
      "automerge": true,
    },
    //
    // Version strategies
    //
    // Versioning for linuxserver two-three digit container versions
    {
      "packagePatterns": ["^linuxserver\\/","^deepquestai\\/"],
      "versionScheme": "regex:^(?<compatibility>.*?(\\d+\\.)??)(?<major>\\d+)\\.(?<minor>\\d+)\\.?(?<patch>\\d+)?(-r?p?\\d)?$"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "versioning": "loose",
      "matchPackageNames": [
        "ghcr.io/onedr0p/plex",
        "ghcr.io/onedr0p/qbittorrent",
        "sirfragalot/hyperion.ng",
      ],
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "quay.io/helmpack/chart-releaser",
        "jnorwood/helm-docs",
        "quay.io/git-chglog/git-chglog"
      ],
      "automerge": false,
      "matchUpdateTypes": ["major", "minor", "patch", "digest", "pin"],
      "labels": ["renovate/image", "ci"],
    },

  ]
}
